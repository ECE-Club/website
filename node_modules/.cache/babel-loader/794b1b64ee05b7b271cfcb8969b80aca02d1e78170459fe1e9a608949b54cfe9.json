{"ast":null,"code":"import compareAscending from'./_compareAscending.js';/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n// that causes it, under certain circumstances, to provide the same value for\n// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n// for more details.\n//\n// This also ensures a stable sort in V8 and other engines.\n// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\nreturn object.index-other.index;}export default compareMultiple;","map":{"version":3,"names":["compareAscending","compareMultiple","object","other","orders","index","objCriteria","criteria","othCriteria","length","ordersLength","result","order"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_compareMultiple.js"],"sourcesContent":["import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n"],"mappings":"AAAA,MAAO,CAAAA,gBAAgB,KAAM,wBAAwB,CAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,eAAeA,CAACC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAE,CAC9C,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CACVC,WAAW,CAAGJ,MAAM,CAACK,QAAQ,CAC7BC,WAAW,CAAGL,KAAK,CAACI,QAAQ,CAC5BE,MAAM,CAAGH,WAAW,CAACG,MAAM,CAC3BC,YAAY,CAAGN,MAAM,CAACK,MAAM,CAEhC,MAAO,EAAEJ,KAAK,CAAGI,MAAM,CAAE,CACvB,GAAI,CAAAE,MAAM,CAAGX,gBAAgB,CAACM,WAAW,CAACD,KAAK,CAAC,CAAEG,WAAW,CAACH,KAAK,CAAC,CAAC,CACrE,GAAIM,MAAM,CAAE,CACV,GAAIN,KAAK,EAAIK,YAAY,CAAE,CACzB,MAAO,CAAAC,MAAM,CACf,CACA,GAAI,CAAAC,KAAK,CAAGR,MAAM,CAACC,KAAK,CAAC,CACzB,MAAO,CAAAM,MAAM,EAAIC,KAAK,EAAI,MAAM,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAC5C,CACF,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAAAV,MAAM,CAACG,KAAK,CAAGF,KAAK,CAACE,KAAK,CACnC,CAEA,cAAe,CAAAJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}