{"ast":null,"code":"import React,{useContext,useCallback}from'react';import DropdownContext from'./DropdownContext';var noop=function noop(){};/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */export function useDropdownToggle(){var _ref=useContext(DropdownContext)||{},_ref$show=_ref.show,show=_ref$show===void 0?false:_ref$show,_ref$toggle=_ref.toggle,toggle=_ref$toggle===void 0?noop:_ref$toggle,setToggle=_ref.setToggle;var handleClick=useCallback(function(e){toggle(!show,e);},[show,toggle]);return[{ref:setToggle||noop,onClick:handleClick,'aria-haspopup':true,'aria-expanded':!!show},{show:show,toggle:toggle}];}/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */function DropdownToggle(_ref2){var children=_ref2.children;var _useDropdownToggle=useDropdownToggle(),props=_useDropdownToggle[0],meta=_useDropdownToggle[1];return/*#__PURE__*/React.createElement(React.Fragment,null,children(props,meta));}DropdownToggle.displayName='ReactOverlaysDropdownToggle';/** @component */export default DropdownToggle;","map":{"version":3,"names":["React","useContext","useCallback","DropdownContext","noop","useDropdownToggle","_ref","_ref$show","show","_ref$toggle","toggle","setToggle","handleClick","e","ref","onClick","DropdownToggle","_ref2","children","_useDropdownToggle","props","meta","createElement","Fragment","displayName"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-overlays/esm/DropdownToggle.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,WAAW,KAAQ,OAAO,CACtD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAE/C,GAAI,CAAAC,IAAI,CAAG,QAAS,CAAAA,IAAIA,CAAA,CAAG,CAAC,CAAC,CAC7B;AACA;AACA;AACA;AACA;AACA,GAGA,MAAO,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAClC,GAAI,CAAAC,IAAI,CAAGL,UAAU,CAACE,eAAe,CAAC,EAAI,CAAC,CAAC,CACxCI,SAAS,CAAGD,IAAI,CAACE,IAAI,CACrBA,IAAI,CAAGD,SAAS,GAAK,IAAK,EAAC,CAAG,KAAK,CAAGA,SAAS,CAC/CE,WAAW,CAAGH,IAAI,CAACI,MAAM,CACzBA,MAAM,CAAGD,WAAW,GAAK,IAAK,EAAC,CAAGL,IAAI,CAAGK,WAAW,CACpDE,SAAS,CAAGL,IAAI,CAACK,SAAS,CAE9B,GAAI,CAAAC,WAAW,CAAGV,WAAW,CAAC,SAAUW,CAAC,CAAE,CACzCH,MAAM,CAAC,CAACF,IAAI,CAAEK,CAAC,CAAC,CAClB,CAAC,CAAE,CAACL,IAAI,CAAEE,MAAM,CAAC,CAAC,CAClB,MAAO,CAAC,CACNI,GAAG,CAAEH,SAAS,EAAIP,IAAI,CACtBW,OAAO,CAAEH,WAAW,CACpB,eAAe,CAAE,IAAI,CACrB,eAAe,CAAE,CAAC,CAACJ,IACrB,CAAC,CAAE,CACDA,IAAI,CAAEA,IAAI,CACVE,MAAM,CAAEA,MACV,CAAC,CAAC,CACJ,CAoBA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAM,cAAcA,CAACC,KAAK,CAAE,CAC7B,GAAI,CAAAC,QAAQ,CAAGD,KAAK,CAACC,QAAQ,CAE7B,GAAI,CAAAC,kBAAkB,CAAGd,iBAAiB,CAAC,CAAC,CACxCe,KAAK,CAAGD,kBAAkB,CAAC,CAAC,CAAC,CAC7BE,IAAI,CAAGF,kBAAkB,CAAC,CAAC,CAAC,CAEhC,MAAO,aAAanB,KAAK,CAACsB,aAAa,CAACtB,KAAK,CAACuB,QAAQ,CAAE,IAAI,CAAEL,QAAQ,CAACE,KAAK,CAAEC,IAAI,CAAC,CAAC,CACtF,CAEAL,cAAc,CAACQ,WAAW,CAAG,6BAA6B,CAE1D,iBAEA,cAAe,CAAAR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}