{"ast":null,"code":"/**\n * React Router DOM v6.18.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */import*as React from'react';import{UNSAFE_mapRouteProperties,UNSAFE_DataRouterContext,UNSAFE_DataRouterStateContext,Router,UNSAFE_useRoutesImpl,UNSAFE_NavigationContext,useHref,useResolvedPath,useLocation,useNavigate,createPath,UNSAFE_useRouteId,UNSAFE_RouteContext,useMatches,useNavigation,unstable_useBlocker}from'react-router';export{AbortedDeferredError,Await,MemoryRouter,Navigate,NavigationType,Outlet,Route,Router,Routes,UNSAFE_DataRouterContext,UNSAFE_DataRouterStateContext,UNSAFE_LocationContext,UNSAFE_NavigationContext,UNSAFE_RouteContext,UNSAFE_useRouteId,createMemoryRouter,createPath,createRoutesFromChildren,createRoutesFromElements,defer,generatePath,isRouteErrorResponse,json,matchPath,matchRoutes,parsePath,redirect,redirectDocument,renderMatches,resolvePath,unstable_useBlocker,useActionData,useAsyncError,useAsyncValue,useHref,useInRouterContext,useLoaderData,useLocation,useMatch,useMatches,useNavigate,useNavigation,useNavigationType,useOutlet,useOutletContext,useParams,useResolvedPath,useRevalidator,useRouteError,useRouteLoaderData,useRoutes}from'react-router';import{stripBasename,UNSAFE_warning,createRouter,createBrowserHistory,createHashHistory,UNSAFE_ErrorResponseImpl,UNSAFE_invariant,joinPaths,IDLE_FETCHER,matchPath}from'@remix-run/router';function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}const defaultMethod=\"get\";const defaultEncType=\"application/x-www-form-urlencoded\";function isHtmlElement(object){return object!=null&&typeof object.tagName===\"string\";}function isButtonElement(object){return isHtmlElement(object)&&object.tagName.toLowerCase()===\"button\";}function isFormElement(object){return isHtmlElement(object)&&object.tagName.toLowerCase()===\"form\";}function isInputElement(object){return isHtmlElement(object)&&object.tagName.toLowerCase()===\"input\";}function isModifiedEvent(event){return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey);}function shouldProcessLinkClick(event,target){return event.button===0&&(// Ignore everything but left clicks\n!target||target===\"_self\")&&// Let browser handle \"target=_blank\" etc.\n!isModifiedEvent(event)// Ignore clicks with modifier keys\n;}/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */function createSearchParams(init){if(init===void 0){init=\"\";}return new URLSearchParams(typeof init===\"string\"||Array.isArray(init)||init instanceof URLSearchParams?init:Object.keys(init).reduce((memo,key)=>{let value=init[key];return memo.concat(Array.isArray(value)?value.map(v=>[key,v]):[[key,value]]);},[]));}function getSearchParamsForLocation(locationSearch,defaultSearchParams){let searchParams=createSearchParams(locationSearch);if(defaultSearchParams){// Use `defaultSearchParams.forEach(...)` here instead of iterating of\n// `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n// web extensions. Relevant Bugzilla tickets:\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\ndefaultSearchParams.forEach((_,key)=>{if(!searchParams.has(key)){defaultSearchParams.getAll(key).forEach(value=>{searchParams.append(key,value);});}});}return searchParams;}// One-time check for submitter support\nlet _formDataSupportsSubmitter=null;function isFormDataSubmitterSupported(){if(_formDataSupportsSubmitter===null){try{new FormData(document.createElement(\"form\"),// @ts-expect-error if FormData supports the submitter parameter, this will throw\n0);_formDataSupportsSubmitter=false;}catch(e){_formDataSupportsSubmitter=true;}}return _formDataSupportsSubmitter;}const supportedFormEncTypes=new Set([\"application/x-www-form-urlencoded\",\"multipart/form-data\",\"text/plain\"]);function getFormEncType(encType){if(encType!=null&&!supportedFormEncTypes.has(encType)){process.env.NODE_ENV!==\"production\"?UNSAFE_warning(false,\"\\\"\"+encType+\"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \"+(\"and will default to \\\"\"+defaultEncType+\"\\\"\")):void 0;return null;}return encType;}function getFormSubmissionInfo(target,basename){let method;let action;let encType;let formData;let body;if(isFormElement(target)){// When grabbing the action from the element, it will have had the basename\n// prefixed to ensure non-JS scenarios work, so strip it since we'll\n// re-prefix in the router\nlet attr=target.getAttribute(\"action\");action=attr?stripBasename(attr,basename):null;method=target.getAttribute(\"method\")||defaultMethod;encType=getFormEncType(target.getAttribute(\"enctype\"))||defaultEncType;formData=new FormData(target);}else if(isButtonElement(target)||isInputElement(target)&&(target.type===\"submit\"||target.type===\"image\")){let form=target.form;if(form==null){throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");}// <button>/<input type=\"submit\"> may override attributes of <form>\n// When grabbing the action from the element, it will have had the basename\n// prefixed to ensure non-JS scenarios work, so strip it since we'll\n// re-prefix in the router\nlet attr=target.getAttribute(\"formaction\")||form.getAttribute(\"action\");action=attr?stripBasename(attr,basename):null;method=target.getAttribute(\"formmethod\")||form.getAttribute(\"method\")||defaultMethod;encType=getFormEncType(target.getAttribute(\"formenctype\"))||getFormEncType(form.getAttribute(\"enctype\"))||defaultEncType;// Build a FormData object populated from a form and submitter\nformData=new FormData(form,target);// If this browser doesn't support the `FormData(el, submitter)` format,\n// then tack on the submitter value at the end.  This is a lightweight\n// solution that is not 100% spec compliant.  For complete support in older\n// browsers, consider using the `formdata-submitter-polyfill` package\nif(!isFormDataSubmitterSupported()){let{name,type,value}=target;if(type===\"image\"){let prefix=name?name+\".\":\"\";formData.append(prefix+\"x\",\"0\");formData.append(prefix+\"y\",\"0\");}else if(name){formData.append(name,value);}}}else if(isHtmlElement(target)){throw new Error(\"Cannot submit element that is not <form>, <button>, or \"+\"<input type=\\\"submit|image\\\">\");}else{method=defaultMethod;action=null;encType=defaultEncType;body=target;}// Send body for <Form encType=\"text/plain\" so we encode it into text\nif(formData&&encType===\"text/plain\"){body=formData;formData=undefined;}return{action,method:method.toLowerCase(),encType,formData,body};}const _excluded=[\"onClick\",\"relative\",\"reloadDocument\",\"replace\",\"state\",\"target\",\"to\",\"preventScrollReset\",\"unstable_viewTransition\"],_excluded2=[\"aria-current\",\"caseSensitive\",\"className\",\"end\",\"style\",\"to\",\"unstable_viewTransition\",\"children\"],_excluded3=[\"fetcherKey\",\"navigate\",\"reloadDocument\",\"replace\",\"state\",\"method\",\"action\",\"onSubmit\",\"relative\",\"preventScrollReset\",\"unstable_viewTransition\"];function createBrowserRouter(routes,opts){return createRouter({basename:opts==null?void 0:opts.basename,future:_extends({},opts==null?void 0:opts.future,{v7_prependBasename:true}),history:createBrowserHistory({window:opts==null?void 0:opts.window}),hydrationData:(opts==null?void 0:opts.hydrationData)||parseHydrationData(),routes,mapRouteProperties:UNSAFE_mapRouteProperties,window:opts==null?void 0:opts.window}).initialize();}function createHashRouter(routes,opts){return createRouter({basename:opts==null?void 0:opts.basename,future:_extends({},opts==null?void 0:opts.future,{v7_prependBasename:true}),history:createHashHistory({window:opts==null?void 0:opts.window}),hydrationData:(opts==null?void 0:opts.hydrationData)||parseHydrationData(),routes,mapRouteProperties:UNSAFE_mapRouteProperties,window:opts==null?void 0:opts.window}).initialize();}function parseHydrationData(){var _window;let state=(_window=window)==null?void 0:_window.__staticRouterHydrationData;if(state&&state.errors){state=_extends({},state,{errors:deserializeErrors(state.errors)});}return state;}function deserializeErrors(errors){if(!errors)return null;let entries=Object.entries(errors);let serialized={};for(let[key,val]of entries){// Hey you!  If you change this, please change the corresponding logic in\n// serializeErrors in react-router-dom/server.tsx :)\nif(val&&val.__type===\"RouteErrorResponse\"){serialized[key]=new UNSAFE_ErrorResponseImpl(val.status,val.statusText,val.data,val.internal===true);}else if(val&&val.__type===\"Error\"){// Attempt to reconstruct the right type of Error (i.e., ReferenceError)\nif(val.__subType){let ErrorConstructor=window[val.__subType];if(typeof ErrorConstructor===\"function\"){try{// @ts-expect-error\nlet error=new ErrorConstructor(val.message);// Wipe away the client-side stack trace.  Nothing to fill it in with\n// because we don't serialize SSR stack traces for security reasons\nerror.stack=\"\";serialized[key]=error;}catch(e){// no-op - fall through and create a normal Error\n}}}if(serialized[key]==null){let error=new Error(val.message);// Wipe away the client-side stack trace.  Nothing to fill it in with\n// because we don't serialize SSR stack traces for security reasons\nerror.stack=\"\";serialized[key]=error;}}else{serialized[key]=val;}}return serialized;}const ViewTransitionContext=/*#__PURE__*/React.createContext({isTransitioning:false});if(process.env.NODE_ENV!==\"production\"){ViewTransitionContext.displayName=\"ViewTransition\";}const FetchersContext=/*#__PURE__*/React.createContext(new Map());if(process.env.NODE_ENV!==\"production\"){FetchersContext.displayName=\"Fetchers\";}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/const START_TRANSITION=\"startTransition\";const startTransitionImpl=React[START_TRANSITION];function startTransitionSafe(cb){if(startTransitionImpl){startTransitionImpl(cb);}else{cb();}}class Deferred{constructor(){this.status=\"pending\";this.promise=new Promise((resolve,reject)=>{this.resolve=value=>{if(this.status===\"pending\"){this.status=\"resolved\";resolve(value);}};this.reject=reason=>{if(this.status===\"pending\"){this.status=\"rejected\";reject(reason);}};});}}/**\n * Given a Remix Router instance, render the appropriate UI\n */function RouterProvider(_ref){let{fallbackElement,router,future}=_ref;let[state,setStateImpl]=React.useState(router.state);let[pendingState,setPendingState]=React.useState();let[vtContext,setVtContext]=React.useState({isTransitioning:false});let[renderDfd,setRenderDfd]=React.useState();let[transition,setTransition]=React.useState();let[interruption,setInterruption]=React.useState();let fetcherData=React.useRef(new Map());let{v7_startTransition}=future||{};let optInStartTransition=React.useCallback(cb=>{if(v7_startTransition){startTransitionSafe(cb);}else{cb();}},[v7_startTransition]);let setState=React.useCallback((newState,_ref2)=>{let{deletedFetchers,unstable_viewTransitionOpts:viewTransitionOpts}=_ref2;deletedFetchers.forEach(key=>fetcherData.current.delete(key));newState.fetchers.forEach((fetcher,key)=>{if(fetcher.data!==undefined){fetcherData.current.set(key,fetcher.data);}});if(!viewTransitionOpts||router.window==null||typeof router.window.document.startViewTransition!==\"function\"){// Mid-navigation state update, or startViewTransition isn't available\noptInStartTransition(()=>setStateImpl(newState));}else if(transition&&renderDfd){// Interrupting an in-progress transition, cancel and let everything flush\n// out, and then kick off a new transition from the interruption state\nrenderDfd.resolve();transition.skipTransition();setInterruption({state:newState,currentLocation:viewTransitionOpts.currentLocation,nextLocation:viewTransitionOpts.nextLocation});}else{// Completed navigation update with opted-in view transitions, let 'er rip\nsetPendingState(newState);setVtContext({isTransitioning:true,currentLocation:viewTransitionOpts.currentLocation,nextLocation:viewTransitionOpts.nextLocation});}},[router.window,transition,renderDfd,fetcherData,optInStartTransition]);// Need to use a layout effect here so we are subscribed early enough to\n// pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\nReact.useLayoutEffect(()=>router.subscribe(setState),[router,setState]);// When we start a view transition, create a Deferred we can use for the\n// eventual \"completed\" render\nReact.useEffect(()=>{if(vtContext.isTransitioning){setRenderDfd(new Deferred());}},[vtContext.isTransitioning]);// Once the deferred is created, kick off startViewTransition() to update the\n// DOM and then wait on the Deferred to resolve (indicating the DOM update has\n// happened)\nReact.useEffect(()=>{if(renderDfd&&pendingState&&router.window){let newState=pendingState;let renderPromise=renderDfd.promise;let transition=router.window.document.startViewTransition(async()=>{optInStartTransition(()=>setStateImpl(newState));await renderPromise;});transition.finished.finally(()=>{setRenderDfd(undefined);setTransition(undefined);setPendingState(undefined);setVtContext({isTransitioning:false});});setTransition(transition);}},[optInStartTransition,pendingState,renderDfd,router.window]);// When the new location finally renders and is committed to the DOM, this\n// effect will run to resolve the transition\nReact.useEffect(()=>{if(renderDfd&&pendingState&&state.location.key===pendingState.location.key){renderDfd.resolve();}},[renderDfd,transition,state.location,pendingState]);// If we get interrupted with a new navigation during a transition, we skip\n// the active transition, let it cleanup, then kick it off again here\nReact.useEffect(()=>{if(!vtContext.isTransitioning&&interruption){setPendingState(interruption.state);setVtContext({isTransitioning:true,currentLocation:interruption.currentLocation,nextLocation:interruption.nextLocation});setInterruption(undefined);}},[vtContext.isTransitioning,interruption]);let navigator=React.useMemo(()=>{return{createHref:router.createHref,encodeLocation:router.encodeLocation,go:n=>router.navigate(n),push:(to,state,opts)=>router.navigate(to,{state,preventScrollReset:opts==null?void 0:opts.preventScrollReset}),replace:(to,state,opts)=>router.navigate(to,{replace:true,state,preventScrollReset:opts==null?void 0:opts.preventScrollReset})};},[router]);let basename=router.basename||\"/\";let dataRouterContext=React.useMemo(()=>({router,navigator,static:false,basename}),[router,navigator,basename]);// The fragment and {null} here are important!  We need them to keep React 18's\n// useId happy when we are server-rendering since we may have a <script> here\n// containing the hydrated server-side staticContext (from StaticRouterProvider).\n// useId relies on the component tree structure to generate deterministic id's\n// so we need to ensure it remains the same on the client even though\n// we don't need the <script> tag\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider,{value:dataRouterContext},/*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider,{value:state},/*#__PURE__*/React.createElement(FetchersContext.Provider,{value:fetcherData.current},/*#__PURE__*/React.createElement(ViewTransitionContext.Provider,{value:vtContext},/*#__PURE__*/React.createElement(Router,{basename:basename,location:state.location,navigationType:state.historyAction,navigator:navigator},state.initialized?/*#__PURE__*/React.createElement(DataRoutes,{routes:router.routes,state:state}):fallbackElement))))),null);}function DataRoutes(_ref3){let{routes,state}=_ref3;return UNSAFE_useRoutesImpl(routes,undefined,state);}/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */function BrowserRouter(_ref4){let{basename,children,future,window}=_ref4;let historyRef=React.useRef();if(historyRef.current==null){historyRef.current=createBrowserHistory({window,v5Compat:true});}let history=historyRef.current;let[state,setStateImpl]=React.useState({action:history.action,location:history.location});let{v7_startTransition}=future||{};let setState=React.useCallback(newState=>{v7_startTransition&&startTransitionImpl?startTransitionImpl(()=>setStateImpl(newState)):setStateImpl(newState);},[setStateImpl,v7_startTransition]);React.useLayoutEffect(()=>history.listen(setState),[history,setState]);return/*#__PURE__*/React.createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */function HashRouter(_ref5){let{basename,children,future,window}=_ref5;let historyRef=React.useRef();if(historyRef.current==null){historyRef.current=createHashHistory({window,v5Compat:true});}let history=historyRef.current;let[state,setStateImpl]=React.useState({action:history.action,location:history.location});let{v7_startTransition}=future||{};let setState=React.useCallback(newState=>{v7_startTransition&&startTransitionImpl?startTransitionImpl(()=>setStateImpl(newState)):setStateImpl(newState);},[setStateImpl,v7_startTransition]);React.useLayoutEffect(()=>history.listen(setState),[history,setState]);return/*#__PURE__*/React.createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */function HistoryRouter(_ref6){let{basename,children,future,history}=_ref6;let[state,setStateImpl]=React.useState({action:history.action,location:history.location});let{v7_startTransition}=future||{};let setState=React.useCallback(newState=>{v7_startTransition&&startTransitionImpl?startTransitionImpl(()=>setStateImpl(newState)):setStateImpl(newState);},[setStateImpl,v7_startTransition]);React.useLayoutEffect(()=>history.listen(setState),[history,setState]);return/*#__PURE__*/React.createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}if(process.env.NODE_ENV!==\"production\"){HistoryRouter.displayName=\"unstable_HistoryRouter\";}const isBrowser=typeof window!==\"undefined\"&&typeof window.document!==\"undefined\"&&typeof window.document.createElement!==\"undefined\";const ABSOLUTE_URL_REGEX=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;/**\n * The public API for rendering a history-aware `<a>`.\n */const Link=/*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7,ref){let{onClick,relative,reloadDocument,replace,state,target,to,preventScrollReset,unstable_viewTransition}=_ref7,rest=_objectWithoutPropertiesLoose(_ref7,_excluded);let{basename}=React.useContext(UNSAFE_NavigationContext);// Rendered into <a href> for absolute URLs\nlet absoluteHref;let isExternal=false;if(typeof to===\"string\"&&ABSOLUTE_URL_REGEX.test(to)){// Render the absolute href server- and client-side\nabsoluteHref=to;// Only check for external origins client-side\nif(isBrowser){try{let currentUrl=new URL(window.location.href);let targetUrl=to.startsWith(\"//\")?new URL(currentUrl.protocol+to):new URL(to);let path=stripBasename(targetUrl.pathname,basename);if(targetUrl.origin===currentUrl.origin&&path!=null){// Strip the protocol/origin/basename for same-origin absolute URLs\nto=path+targetUrl.search+targetUrl.hash;}else{isExternal=true;}}catch(e){// We can't do external URL detection without a valid URL\nprocess.env.NODE_ENV!==\"production\"?UNSAFE_warning(false,\"<Link to=\\\"\"+to+\"\\\"> contains an invalid URL which will probably break \"+\"when clicked - please update to a valid URL path.\"):void 0;}}}// Rendered into <a href> for relative URLs\nlet href=useHref(to,{relative});let internalOnClick=useLinkClickHandler(to,{replace,state,target,preventScrollReset,relative,unstable_viewTransition});function handleClick(event){if(onClick)onClick(event);if(!event.defaultPrevented){internalOnClick(event);}}return/*#__PURE__*/ (// eslint-disable-next-line jsx-a11y/anchor-has-content\nReact.createElement(\"a\",_extends({},rest,{href:absoluteHref||href,onClick:isExternal||reloadDocument?onClick:handleClick,ref:ref,target:target})));});if(process.env.NODE_ENV!==\"production\"){Link.displayName=\"Link\";}/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */const NavLink=/*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8,ref){let{\"aria-current\":ariaCurrentProp=\"page\",caseSensitive=false,className:classNameProp=\"\",end=false,style:styleProp,to,unstable_viewTransition,children}=_ref8,rest=_objectWithoutPropertiesLoose(_ref8,_excluded2);let path=useResolvedPath(to,{relative:rest.relative});let location=useLocation();let routerState=React.useContext(UNSAFE_DataRouterStateContext);let{navigator}=React.useContext(UNSAFE_NavigationContext);let isTransitioning=routerState!=null&&// Conditional usage is OK here because the usage of a data router is static\n// eslint-disable-next-line react-hooks/rules-of-hooks\nuseViewTransitionState(path)&&unstable_viewTransition===true;let toPathname=navigator.encodeLocation?navigator.encodeLocation(path).pathname:path.pathname;let locationPathname=location.pathname;let nextLocationPathname=routerState&&routerState.navigation&&routerState.navigation.location?routerState.navigation.location.pathname:null;if(!caseSensitive){locationPathname=locationPathname.toLowerCase();nextLocationPathname=nextLocationPathname?nextLocationPathname.toLowerCase():null;toPathname=toPathname.toLowerCase();}let isActive=locationPathname===toPathname||!end&&locationPathname.startsWith(toPathname)&&locationPathname.charAt(toPathname.length)===\"/\";let isPending=nextLocationPathname!=null&&(nextLocationPathname===toPathname||!end&&nextLocationPathname.startsWith(toPathname)&&nextLocationPathname.charAt(toPathname.length)===\"/\");let renderProps={isActive,isPending,isTransitioning};let ariaCurrent=isActive?ariaCurrentProp:undefined;let className;if(typeof classNameProp===\"function\"){className=classNameProp(renderProps);}else{// If the className prop is not a function, we use a default `active`\n// class for <NavLink />s that are active. In v5 `active` was the default\n// value for `activeClassName`, but we are removing that API and can still\n// use the old default behavior for a cleaner upgrade path and keep the\n// simple styling rules working as they currently do.\nclassName=[classNameProp,isActive?\"active\":null,isPending?\"pending\":null,isTransitioning?\"transitioning\":null].filter(Boolean).join(\" \");}let style=typeof styleProp===\"function\"?styleProp(renderProps):styleProp;return/*#__PURE__*/React.createElement(Link,_extends({},rest,{\"aria-current\":ariaCurrent,className:className,ref:ref,style:style,to:to,unstable_viewTransition:unstable_viewTransition}),typeof children===\"function\"?children(renderProps):children);});if(process.env.NODE_ENV!==\"production\"){NavLink.displayName=\"NavLink\";}/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */const Form=/*#__PURE__*/React.forwardRef((_ref9,forwardedRef)=>{let{fetcherKey,navigate,reloadDocument,replace,state,method=defaultMethod,action,onSubmit,relative,preventScrollReset,unstable_viewTransition}=_ref9,props=_objectWithoutPropertiesLoose(_ref9,_excluded3);let submit=useSubmit();let formAction=useFormAction(action,{relative});let formMethod=method.toLowerCase()===\"get\"?\"get\":\"post\";let submitHandler=event=>{onSubmit&&onSubmit(event);if(event.defaultPrevented)return;event.preventDefault();let submitter=event.nativeEvent.submitter;let submitMethod=(submitter==null?void 0:submitter.getAttribute(\"formmethod\"))||method;submit(submitter||event.currentTarget,{fetcherKey,method:submitMethod,navigate,replace,state,relative,preventScrollReset,unstable_viewTransition});};return/*#__PURE__*/React.createElement(\"form\",_extends({ref:forwardedRef,method:formMethod,action:formAction,onSubmit:reloadDocument?onSubmit:submitHandler},props));});if(process.env.NODE_ENV!==\"production\"){Form.displayName=\"Form\";}/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */function ScrollRestoration(_ref10){let{getKey,storageKey}=_ref10;useScrollRestoration({getKey,storageKey});return null;}if(process.env.NODE_ENV!==\"production\"){ScrollRestoration.displayName=\"ScrollRestoration\";}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;(function(DataRouterHook){DataRouterHook[\"UseScrollRestoration\"]=\"useScrollRestoration\";DataRouterHook[\"UseSubmit\"]=\"useSubmit\";DataRouterHook[\"UseSubmitFetcher\"]=\"useSubmitFetcher\";DataRouterHook[\"UseFetcher\"]=\"useFetcher\";DataRouterHook[\"useViewTransitionState\"]=\"useViewTransitionState\";})(DataRouterHook||(DataRouterHook={}));var DataRouterStateHook;(function(DataRouterStateHook){DataRouterStateHook[\"UseFetcher\"]=\"useFetcher\";DataRouterStateHook[\"UseFetchers\"]=\"useFetchers\";DataRouterStateHook[\"UseScrollRestoration\"]=\"useScrollRestoration\";})(DataRouterStateHook||(DataRouterStateHook={}));// Internal hooks\nfunction getDataRouterConsoleError(hookName){return hookName+\" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";}function useDataRouterContext(hookName){let ctx=React.useContext(UNSAFE_DataRouterContext);!ctx?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,getDataRouterConsoleError(hookName)):UNSAFE_invariant(false):void 0;return ctx;}function useDataRouterState(hookName){let state=React.useContext(UNSAFE_DataRouterStateContext);!state?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,getDataRouterConsoleError(hookName)):UNSAFE_invariant(false):void 0;return state;}// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */function useLinkClickHandler(to,_temp){let{target,replace:replaceProp,state,preventScrollReset,relative,unstable_viewTransition}=_temp===void 0?{}:_temp;let navigate=useNavigate();let location=useLocation();let path=useResolvedPath(to,{relative});return React.useCallback(event=>{if(shouldProcessLinkClick(event,target)){event.preventDefault();// If the URL hasn't changed, a regular <a> will do a replace instead of\n// a push, so do the same here unless the replace prop is explicitly set\nlet replace=replaceProp!==undefined?replaceProp:createPath(location)===createPath(path);navigate(to,{replace,state,preventScrollReset,relative,unstable_viewTransition});}},[location,navigate,path,replaceProp,state,target,to,preventScrollReset,relative,unstable_viewTransition]);}/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */function useSearchParams(defaultInit){process.env.NODE_ENV!==\"production\"?UNSAFE_warning(typeof URLSearchParams!==\"undefined\",\"You cannot use the `useSearchParams` hook in a browser that does not \"+\"support the URLSearchParams API. If you need to support Internet \"+\"Explorer 11, we recommend you load a polyfill such as \"+\"https://github.com/ungap/url-search-params\\n\\n\"+\"If you're unsure how to load polyfills, we recommend you check out \"+\"https://polyfill.io/v3/ which provides some recommendations about how \"+\"to load polyfills only for users that need them, instead of for every \"+\"user.\"):void 0;let defaultSearchParamsRef=React.useRef(createSearchParams(defaultInit));let hasSetSearchParamsRef=React.useRef(false);let location=useLocation();let searchParams=React.useMemo(()=>// Only merge in the defaults if we haven't yet called setSearchParams.\n// Once we call that we want those to take precedence, otherwise you can't\n// remove a param with setSearchParams({}) if it has an initial value\ngetSearchParamsForLocation(location.search,hasSetSearchParamsRef.current?null:defaultSearchParamsRef.current),[location.search]);let navigate=useNavigate();let setSearchParams=React.useCallback((nextInit,navigateOptions)=>{const newSearchParams=createSearchParams(typeof nextInit===\"function\"?nextInit(searchParams):nextInit);hasSetSearchParamsRef.current=true;navigate(\"?\"+newSearchParams,navigateOptions);},[navigate,searchParams]);return[searchParams,setSearchParams];}function validateClientSideSubmission(){if(typeof document===\"undefined\"){throw new Error(\"You are calling submit during the server render. \"+\"Try calling submit within a `useEffect` or callback instead.\");}}let fetcherId=0;let getUniqueFetcherId=()=>\"__\"+String(++fetcherId)+\"__\";/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */function useSubmit(){let{router}=useDataRouterContext(DataRouterHook.UseSubmit);let{basename}=React.useContext(UNSAFE_NavigationContext);let currentRouteId=UNSAFE_useRouteId();return React.useCallback(function(target,options){if(options===void 0){options={};}validateClientSideSubmission();let{action,method,encType,formData,body}=getFormSubmissionInfo(target,basename);if(options.navigate===false){let key=options.fetcherKey||getUniqueFetcherId();router.fetch(key,currentRouteId,options.action||action,{preventScrollReset:options.preventScrollReset,formData,body,formMethod:options.method||method,formEncType:options.encType||encType});}else{router.navigate(options.action||action,{preventScrollReset:options.preventScrollReset,formData,body,formMethod:options.method||method,formEncType:options.encType||encType,replace:options.replace,state:options.state,fromRouteId:currentRouteId,unstable_viewTransition:options.unstable_viewTransition});}},[router,basename,currentRouteId]);}// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action,_temp2){let{relative}=_temp2===void 0?{}:_temp2;let{basename}=React.useContext(UNSAFE_NavigationContext);let routeContext=React.useContext(UNSAFE_RouteContext);!routeContext?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"useFormAction must be used inside a RouteContext\"):UNSAFE_invariant(false):void 0;let[match]=routeContext.matches.slice(-1);// Shallow clone path so we can modify it below, otherwise we modify the\n// object referenced by useMemo inside useResolvedPath\nlet path=_extends({},useResolvedPath(action?action:\".\",{relative}));// Previously we set the default action to \".\". The problem with this is that\n// `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n// the intended behavior of when \".\" is specifically provided as\n// the form action, but inconsistent w/ browsers when the action is omitted.\n// https://github.com/remix-run/remix/issues/927\nlet location=useLocation();if(action==null){// Safe to write to this directly here since if action was undefined, we\n// would have called useResolvedPath(\".\") which will never include a search\npath.search=location.search;// When grabbing search params from the URL, remove the automatically\n// inserted ?index param so we match the useResolvedPath search behavior\n// which would not include ?index\nif(match.route.index){let params=new URLSearchParams(path.search);params.delete(\"index\");path.search=params.toString()?\"?\"+params.toString():\"\";}}if((!action||action===\".\")&&match.route.index){path.search=path.search?path.search.replace(/^\\?/,\"?index&\"):\"?index\";}// If we're operating within a basename, prepend it to the pathname prior\n// to creating the form action.  If this is a root navigation, then just use\n// the raw basename which allows the basename to have full control over the\n// presence of a trailing slash on root actions\nif(basename!==\"/\"){path.pathname=path.pathname===\"/\"?basename:joinPaths([basename,path.pathname]);}return createPath(path);}// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */function useFetcher(_temp3){var _route$matches;let{key}=_temp3===void 0?{}:_temp3;let{router}=useDataRouterContext(DataRouterHook.UseFetcher);let state=useDataRouterState(DataRouterStateHook.UseFetcher);let fetcherData=React.useContext(FetchersContext);let route=React.useContext(UNSAFE_RouteContext);let routeId=(_route$matches=route.matches[route.matches.length-1])==null?void 0:_route$matches.route.id;!fetcherData?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"useFetcher must be used inside a FetchersContext\"):UNSAFE_invariant(false):void 0;!route?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"useFetcher must be used inside a RouteContext\"):UNSAFE_invariant(false):void 0;!(routeId!=null)?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"useFetcher can only be used on routes that contain a unique \\\"id\\\"\"):UNSAFE_invariant(false):void 0;// Fetcher key handling\nlet[fetcherKey,setFetcherKey]=React.useState(key||\"\");if(!fetcherKey){setFetcherKey(getUniqueFetcherId());}// Registration/cleanup\nReact.useEffect(()=>{router.getFetcher(fetcherKey);return()=>{// Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n// will not delete immediately but instead queue up a delete after the\n// fetcher returns to an `idle` state\nrouter.deleteFetcher(fetcherKey);};},[router,fetcherKey]);// Fetcher additions\nlet load=React.useCallback(href=>{!routeId?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"No routeId available for fetcher.load()\"):UNSAFE_invariant(false):void 0;router.fetch(fetcherKey,routeId,href);},[fetcherKey,routeId,router]);let submitImpl=useSubmit();let submit=React.useCallback((target,opts)=>{submitImpl(target,_extends({},opts,{navigate:false,fetcherKey}));},[fetcherKey,submitImpl]);let FetcherForm=React.useMemo(()=>{let FetcherForm=/*#__PURE__*/React.forwardRef((props,ref)=>{return/*#__PURE__*/React.createElement(Form,_extends({},props,{navigate:false,fetcherKey:fetcherKey,ref:ref}));});if(process.env.NODE_ENV!==\"production\"){FetcherForm.displayName=\"fetcher.Form\";}return FetcherForm;},[fetcherKey]);// Exposed FetcherWithComponents\nlet fetcher=state.fetchers.get(fetcherKey)||IDLE_FETCHER;let data=fetcherData.get(fetcherKey);let fetcherWithComponents=React.useMemo(()=>_extends({Form:FetcherForm,submit,load},fetcher,{data}),[FetcherForm,submit,load,fetcher,data]);return fetcherWithComponents;}/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */function useFetchers(){let state=useDataRouterState(DataRouterStateHook.UseFetchers);return Array.from(state.fetchers.entries()).map(_ref11=>{let[key,fetcher]=_ref11;return _extends({},fetcher,{key});});}const SCROLL_RESTORATION_STORAGE_KEY=\"react-router-scroll-positions\";let savedScrollPositions={};/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */function useScrollRestoration(_temp4){let{getKey,storageKey}=_temp4===void 0?{}:_temp4;let{router}=useDataRouterContext(DataRouterHook.UseScrollRestoration);let{restoreScrollPosition,preventScrollReset}=useDataRouterState(DataRouterStateHook.UseScrollRestoration);let{basename}=React.useContext(UNSAFE_NavigationContext);let location=useLocation();let matches=useMatches();let navigation=useNavigation();// Trigger manual scroll restoration while we're active\nReact.useEffect(()=>{window.history.scrollRestoration=\"manual\";return()=>{window.history.scrollRestoration=\"auto\";};},[]);// Save positions on pagehide\nusePageHide(React.useCallback(()=>{if(navigation.state===\"idle\"){let key=(getKey?getKey(location,matches):null)||location.key;savedScrollPositions[key]=window.scrollY;}try{sessionStorage.setItem(storageKey||SCROLL_RESTORATION_STORAGE_KEY,JSON.stringify(savedScrollPositions));}catch(error){process.env.NODE_ENV!==\"production\"?UNSAFE_warning(false,\"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\"+error+\").\"):void 0;}window.history.scrollRestoration=\"auto\";},[storageKey,getKey,navigation.state,location,matches]));// Read in any saved scroll locations\nif(typeof document!==\"undefined\"){// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useLayoutEffect(()=>{try{let sessionPositions=sessionStorage.getItem(storageKey||SCROLL_RESTORATION_STORAGE_KEY);if(sessionPositions){savedScrollPositions=JSON.parse(sessionPositions);}}catch(e){// no-op, use default empty object\n}},[storageKey]);// Enable scroll restoration in the router\n// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useLayoutEffect(()=>{let getKeyWithoutBasename=getKey&&basename!==\"/\"?(location,matches)=>getKey(// Strip the basename to match useLocation()\n_extends({},location,{pathname:stripBasename(location.pathname,basename)||location.pathname}),matches):getKey;let disableScrollRestoration=router==null?void 0:router.enableScrollRestoration(savedScrollPositions,()=>window.scrollY,getKeyWithoutBasename);return()=>disableScrollRestoration&&disableScrollRestoration();},[router,basename,getKey]);// Restore scrolling when state.restoreScrollPosition changes\n// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useLayoutEffect(()=>{// Explicit false means don't do anything (used for submissions)\nif(restoreScrollPosition===false){return;}// been here before, scroll to it\nif(typeof restoreScrollPosition===\"number\"){window.scrollTo(0,restoreScrollPosition);return;}// try to scroll to the hash\nif(location.hash){let el=document.getElementById(decodeURIComponent(location.hash.slice(1)));if(el){el.scrollIntoView();return;}}// Don't reset if this navigation opted out\nif(preventScrollReset===true){return;}// otherwise go to the top on new locations\nwindow.scrollTo(0,0);},[location,restoreScrollPosition,preventScrollReset]);}}/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */function useBeforeUnload(callback,options){let{capture}=options||{};React.useEffect(()=>{let opts=capture!=null?{capture}:undefined;window.addEventListener(\"beforeunload\",callback,opts);return()=>{window.removeEventListener(\"beforeunload\",callback,opts);};},[callback,capture]);}/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */function usePageHide(callback,options){let{capture}=options||{};React.useEffect(()=>{let opts=capture!=null?{capture}:undefined;window.addEventListener(\"pagehide\",callback,opts);return()=>{window.removeEventListener(\"pagehide\",callback,opts);};},[callback,capture]);}/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */function usePrompt(_ref12){let{when,message}=_ref12;let blocker=unstable_useBlocker(when);React.useEffect(()=>{if(blocker.state===\"blocked\"){let proceed=window.confirm(message);if(proceed){// This timeout is needed to avoid a weird \"race\" on POP navigations\n// between the `window.history` revert navigation and the result of\n// `window.confirm`\nsetTimeout(blocker.proceed,0);}else{blocker.reset();}}},[blocker,message]);React.useEffect(()=>{if(blocker.state===\"blocked\"&&!when){blocker.reset();}},[blocker,when]);}/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */function useViewTransitionState(to,opts){if(opts===void 0){opts={};}let vtContext=React.useContext(ViewTransitionContext);!(vtContext!=null)?process.env.NODE_ENV!==\"production\"?UNSAFE_invariant(false,\"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \"+\"Did you accidentally import `RouterProvider` from `react-router`?\"):UNSAFE_invariant(false):void 0;let{basename}=useDataRouterContext(DataRouterHook.useViewTransitionState);let path=useResolvedPath(to,{relative:opts.relative});if(!vtContext.isTransitioning){return false;}let currentPath=stripBasename(vtContext.currentLocation.pathname,basename)||vtContext.currentLocation.pathname;let nextPath=stripBasename(vtContext.nextLocation.pathname,basename)||vtContext.nextLocation.pathname;// Transition is active if we're going to or coming from the indicated\n// destination.  This ensures that other PUSH navigations that reverse\n// an indicated transition apply.  I.e., on the list view you have:\n//\n//   <NavLink to=\"/details/1\" unstable_viewTransition>\n//\n// If you click the breadcrumb back to the list view:\n//\n//   <NavLink to=\"/list\" unstable_viewTransition>\n//\n// We should apply the transition because it's indicated as active going\n// from /list -> /details/1 and therefore should be active on the reverse\n// (even though this isn't strictly a POP reverse)\nreturn matchPath(path.pathname,nextPath)!=null||matchPath(path.pathname,currentPath)!=null;}//#endregion\nexport{BrowserRouter,Form,HashRouter,Link,NavLink,RouterProvider,ScrollRestoration,FetchersContext as UNSAFE_FetchersContext,ViewTransitionContext as UNSAFE_ViewTransitionContext,useScrollRestoration as UNSAFE_useScrollRestoration,createBrowserRouter,createHashRouter,createSearchParams,HistoryRouter as unstable_HistoryRouter,usePrompt as unstable_usePrompt,useViewTransitionState as unstable_useViewTransitionState,useBeforeUnload,useFetcher,useFetchers,useFormAction,useLinkClickHandler,useSearchParams,useSubmit};","map":{"version":3,"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","env","NODE_ENV","UNSAFE_warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","UNSAFE_mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","UNSAFE_ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","deletedFetchers","unstable_viewTransitionOpts","viewTransitionOpts","current","delete","fetchers","fetcher","set","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","Fragment","UNSAFE_DataRouterContext","Provider","UNSAFE_DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_ref3","UNSAFE_useRoutesImpl","BrowserRouter","_ref4","children","historyRef","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","_objectWithoutPropertiesLoose","_excluded","useContext","UNSAFE_NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","_ref9","forwardedRef","fetcherKey","onSubmit","props","_excluded3","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","UNSAFE_invariant","useDataRouterState","_temp","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","UNSAFE_useRouteId","options","fetch","formEncType","fromRouteId","_temp2","routeContext","UNSAFE_RouteContext","match","matches","slice","route","index","params","toString","joinPaths","useFetcher","_temp3","_route$matches","UseFetcher","routeId","id","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","get","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","_ref12","when","blocker","unstable_useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-router-dom/dom.ts","/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { deletedFetchers, unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n              >\n                {state.initialized ? (\n                  <DataRoutes routes={router.routes} state={state} />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || \"\");\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"],"mappings":";;;;;;;;;ozDAOO,KAAM,CAAAA,aAAa,CAAmB,KAAK,CAClD,KAAM,CAAAC,cAAc,CAAgB,mCAAmC,CAEjE,QAAU,CAAAC,aAAaA,CAACC,MAAW,EACvC,MAAO,CAAAA,MAAM,EAAI,IAAI,EAAI,MAAO,CAAAA,MAAM,CAACC,OAAO,GAAK,QAAQ,CAC7D,CAEM,QAAU,CAAAC,eAAeA,CAACF,MAAW,EACzC,MAAO,CAAAD,aAAa,CAACC,MAAM,CAAC,EAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,GAAK,QAAQ,CAC3E,CAEM,QAAU,CAAAC,aAAaA,CAACJ,MAAW,EACvC,MAAO,CAAAD,aAAa,CAACC,MAAM,CAAC,EAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,GAAK,MAAM,CACzE,CAEM,QAAU,CAAAE,cAAcA,CAACL,MAAW,EACxC,MAAO,CAAAD,aAAa,CAACC,MAAM,CAAC,EAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,GAAK,OAAO,CAC1E,CAOA,QAAS,CAAAG,eAAeA,CAACC,KAAwB,EAC/C,MAAO,CAAC,EAAEA,KAAK,CAACC,OAAO,EAAID,KAAK,CAACE,MAAM,EAAIF,KAAK,CAACG,OAAO,EAAIH,KAAK,CAACI,QAAQ,CAAC,CAC7E,CAEgB,SAAAC,sBAAsBA,CACpCL,KAAwB,CACxBM,MAAe,EAEf,MACE,CAAAN,KAAK,CAACO,MAAM,GAAK,CAAC,GAAI;AACrB,CAACD,MAAM,EAAIA,MAAM,GAAK,OAAO,CAAC,EAAI;AACnC,CAACP,eAAe,CAACC,KAAK,CAAC;AAAA,CAE3B,CAUA;;;;;;;;;;;;;;;;;;;;AAoBG,GACa,SAAAQ,kBAAkBA,CAChCC,IAAA,CAA8B,IAA9BA,IAAA,WAAAA,IAAA,CAA4B,EAAE,EAE9B,MAAO,IAAI,CAAAC,eAAe,CACxB,MAAO,CAAAD,IAAI,GAAK,QAAQ,EACxBE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EACnBA,IAAI,WAAY,CAAAC,eAAe,CAC3BD,IAAI,CACJI,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,CAAC,CAACC,IAAI,CAAEC,GAAG,GAAI,CACrC,GAAI,CAAAC,KAAK,CAAGT,IAAI,CAACQ,GAAG,CAAC,CACrB,MAAO,CAAAD,IAAI,CAACG,MAAM,CAChBR,KAAK,CAACC,OAAO,CAACM,KAAK,CAAC,CAAGA,KAAK,CAACE,GAAG,CAAEC,CAAC,EAAK,CAACJ,GAAG,CAAEI,CAAC,CAAC,CAAC,CAAG,CAAC,CAACJ,GAAG,CAAEC,KAAK,CAAC,CAAC,CACnE,C,CACF,CAAE,EAAyB,CAAC,CAClC,CACH,CAEgB,SAAAI,0BAA0BA,CACxCC,cAAsB,CACtBC,mBAA2C,EAE3C,GAAI,CAAAC,YAAY,CAAGjB,kBAAkB,CAACe,cAAc,CAAC,CAErD,GAAIC,mBAAmB,CAAE,CACvB;AACA;AACA;AACA;AACA;AACAA,mBAAmB,CAACE,OAAO,CAAC,CAACC,CAAC,CAAEV,GAAG,GAAI,CACrC,GAAI,CAACQ,YAAY,CAACG,GAAG,CAACX,GAAG,CAAC,CAAE,CAC1BO,mBAAmB,CAACK,MAAM,CAACZ,GAAG,CAAC,CAACS,OAAO,CAAER,KAAK,EAAI,CAChDO,YAAY,CAACK,MAAM,CAACb,GAAG,CAAEC,KAAK,CAAC,CACjC,CAAC,CAAC,CACH,CACH,CAAC,CAAC,CACH,CAED,MAAO,CAAAO,YAAY,CACrB,CAmBA;AACA,GAAI,CAAAM,0BAA0B,CAAmB,IAAI,CAErD,QAAS,CAAAC,4BAA4BA,CAAA,EACnC,GAAID,0BAA0B,GAAK,IAAI,CAAE,CACvC,GAAI,CACF,GAAI,CAAAE,QAAQ,CACVC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAC9B;AACA,CAAC,CACF,CACDJ,0BAA0B,CAAG,KAAK,C,CAClC,MAAOK,CAAC,CAAE,CACVL,0BAA0B,CAAG,IAAI,CAClC,CACF,CACD,MAAO,CAAAA,0BAA0B,CACnC,CA8DA,KAAM,CAAAM,qBAAqB,CAAqB,GAAI,CAAAC,GAAG,CAAC,CACtD,mCAAmC,CACnC,qBAAqB,CACrB,YAAY,CACb,CAAC,CAEF,QAAS,CAAAC,cAAcA,CAACC,OAAsB,EAC5C,GAAIA,OAAO,EAAI,IAAI,EAAI,CAACH,qBAAqB,CAACT,GAAG,CAACY,OAAsB,CAAC,CAAE,CACzEC,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAAC,cAAO,CACL,KAAK,CACL,IAAI,CAAAJ,OAAO,CACe,uFAAAjD,cAAc,MAAG,CAC5C,QAED,MAAO,KAAI,CACZ,CACD,MAAO,CAAAiD,OAAO,CAChB,CAEgB,SAAAK,qBAAqBA,CACnCvC,MAAoB,CACpBwC,QAAgB,EAQhB,GAAI,CAAAC,MAAc,CAClB,GAAI,CAAAC,MAAqB,CACzB,GAAI,CAAAR,OAAe,CACnB,GAAI,CAAAS,QAA8B,CAClC,GAAI,CAAAC,IAAS,CAEb,GAAIrD,aAAa,CAACS,MAAM,CAAC,CAAE,CACzB;AACA;AACA;AACA,GAAI,CAAA6C,IAAI,CAAG7C,MAAM,CAAC8C,YAAY,CAAC,QAAQ,CAAC,CACxCJ,MAAM,CAAGG,IAAI,CAAGE,aAAa,CAACF,IAAI,CAAEL,QAAQ,CAAC,CAAG,IAAI,CACpDC,MAAM,CAAGzC,MAAM,CAAC8C,YAAY,CAAC,QAAQ,CAAC,EAAI9D,aAAa,CACvDkD,OAAO,CAAGD,cAAc,CAACjC,MAAM,CAAC8C,YAAY,CAAC,SAAS,CAAC,CAAC,EAAI7D,cAAc,CAE1E0D,QAAQ,CAAG,GAAI,CAAAhB,QAAQ,CAAC3B,MAAM,CAAC,C,CAChC,IAAM,IACLX,eAAe,CAACW,MAAM,CAAC,EACtBR,cAAc,CAACQ,MAAM,CAAC,GACpBA,MAAM,CAACgD,IAAI,GAAK,QAAQ,EAAIhD,MAAM,CAACgD,IAAI,GAAK,OAAO,CAAE,CACxD,CACA,GAAI,CAAAC,IAAI,CAAGjD,MAAM,CAACiD,IAAI,CAEtB,GAAIA,IAAI,EAAI,IAAI,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,uEACuD,CACrE,CACF,CAED;AAEA;AACA;AACA;AACA,GAAI,CAAAL,IAAI,CAAG7C,MAAM,CAAC8C,YAAY,CAAC,YAAY,CAAC,EAAIG,IAAI,CAACH,YAAY,CAAC,QAAQ,CAAC,CAC3EJ,MAAM,CAAGG,IAAI,CAAGE,aAAa,CAACF,IAAI,CAAEL,QAAQ,CAAC,CAAG,IAAI,CAEpDC,MAAM,CACJzC,MAAM,CAAC8C,YAAY,CAAC,YAAY,CAAC,EACjCG,IAAI,CAACH,YAAY,CAAC,QAAQ,CAAC,EAC3B9D,aAAa,CACfkD,OAAO,CACLD,cAAc,CAACjC,MAAM,CAAC8C,YAAY,CAAC,aAAa,CAAC,CAAC,EAClDb,cAAc,CAACgB,IAAI,CAACH,YAAY,CAAC,SAAS,CAAC,CAAC,EAC5C7D,cAAc,CAEhB;AACA0D,QAAQ,CAAG,GAAI,CAAAhB,QAAQ,CAACsB,IAAI,CAAEjD,MAAM,CAAC,CAErC;AACA;AACA;AACA;AACA,GAAI,CAAC0B,4BAA4B,EAAE,CAAE,CACnC,GAAI,CAAEyB,IAAI,CAAEH,IAAI,CAAEpC,KAAK,CAAE,CAAGZ,MAAM,CAClC,GAAIgD,IAAI,GAAK,OAAO,CAAE,CACpB,GAAI,CAAAI,MAAM,CAAGD,IAAI,CAAMA,IAAI,KAAM,EAAE,CACnCR,QAAQ,CAACnB,MAAM,CAAI4B,MAAM,KAAK,GAAG,CAAC,CAClCT,QAAQ,CAACnB,MAAM,CAAI4B,MAAM,KAAK,GAAG,CAAC,C,CACnC,IAAM,IAAID,IAAI,CAAE,CACfR,QAAQ,CAACnB,MAAM,CAAC2B,IAAI,CAAEvC,KAAK,CAAC,CAC7B,CACF,CACF,KAAM,IAAI1B,aAAa,CAACc,MAAM,CAAC,CAAE,CAChC,KAAM,IAAI,CAAAkD,KAAK,CACb,yFAC+B,CAChC,CACF,KAAM,CACLT,MAAM,CAAGzD,aAAa,CACtB0D,MAAM,CAAG,IAAI,CACbR,OAAO,CAAGjD,cAAc,CACxB2D,IAAI,CAAG5C,MAAM,CACd,CAED;AACA,GAAI2C,QAAQ,EAAIT,OAAO,GAAK,YAAY,CAAE,CACxCU,IAAI,CAAGD,QAAQ,CACfA,QAAQ,CAAGU,SAAS,CACrB,CAED,MAAO,CAAEX,MAAM,CAAED,MAAM,CAAEA,MAAM,CAACnD,WAAW,EAAE,CAAE4C,OAAO,CAAES,QAAQ,CAAEC,I,CAAM,CAC1E,C,sZC3FgB,SAAAU,mBAAmBA,CACjCC,MAAqB,CACrBC,IAAoB,EAEpB,MAAO,CAAAC,YAAY,CAAC,CAClBjB,QAAQ,CAAEgB,IAAI,EAAJ,YAAAA,IAAI,CAAEhB,QAAQ,CACxBkB,MAAM,CAAAC,QAAA,IACDH,IAAI,EAAJ,YAAAA,IAAI,CAAEE,MAAM,EACfE,kBAAkB,CAAE,I,CACrB,EACDC,OAAO,CAAEC,oBAAoB,CAAC,CAAEC,MAAM,CAAEP,IAAI,EAAJ,YAAAA,IAAI,CAAEO,MAAM,CAAE,CAAC,CACvDC,aAAa,CAAE,CAAAR,IAAI,EAAJ,YAAAA,IAAI,CAAEQ,aAAa,GAAIC,kBAAkB,EAAE,CAC1DV,MAAM,C,mBACNW,yBAAkB,CAClBH,MAAM,CAAEP,IAAI,EAAJ,YAAAA,IAAI,CAAEO,M,CACf,CAAC,CAACI,UAAU,EAAE,CACjB,CAEgB,SAAAC,gBAAgBA,CAC9Bb,MAAqB,CACrBC,IAAoB,EAEpB,MAAO,CAAAC,YAAY,CAAC,CAClBjB,QAAQ,CAAEgB,IAAI,EAAJ,YAAAA,IAAI,CAAEhB,QAAQ,CACxBkB,MAAM,CAAAC,QAAA,IACDH,IAAI,EAAJ,YAAAA,IAAI,CAAEE,MAAM,EACfE,kBAAkB,CAAE,I,CACrB,EACDC,OAAO,CAAEQ,iBAAiB,CAAC,CAAEN,MAAM,CAAEP,IAAI,EAAJ,YAAAA,IAAI,CAAEO,MAAM,CAAE,CAAC,CACpDC,aAAa,CAAE,CAAAR,IAAI,EAAJ,YAAAA,IAAI,CAAEQ,aAAa,GAAIC,kBAAkB,EAAE,CAC1DV,MAAM,C,mBACNW,yBAAkB,CAClBH,MAAM,CAAEP,IAAI,EAAJ,YAAAA,IAAI,CAAEO,M,CACf,CAAC,CAACI,UAAU,EAAE,CACjB,CAEA,QAAS,CAAAF,kBAAkBA,CAAA,MAAAK,OAAA,CACzB,GAAI,CAAAC,KAAK,EAAAD,OAAA,CAAGP,MAAM,GAAN,YAAAO,OAAA,CAAQE,2BAA2B,CAC/C,GAAID,KAAK,EAAIA,KAAK,CAACE,MAAM,CAAE,CACzBF,KAAK,CAAAZ,QAAA,IACAY,KAAK,EACRE,MAAM,CAAEC,iBAAiB,CAACH,KAAK,CAACE,MAAM,C,CACvC,EACF,CACD,MAAO,CAAAF,KAAK,CACd,CAEA,QAAS,CAAAG,iBAAiBA,CACxBD,MAAsC,EAEtC,GAAI,CAACA,MAAM,CAAE,MAAO,KAAI,CACxB,GAAI,CAAAE,OAAO,CAAGpE,MAAM,CAACoE,OAAO,CAACF,MAAM,CAAC,CACpC,GAAI,CAAAG,UAAU,CAAmC,EAAE,CACnD,IAAK,GAAI,CAACjE,GAAG,CAAEkE,GAAG,CAAC,EAAI,CAAAF,OAAO,CAAE,CAC9B;AACA;AACA,GAAIE,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,oBAAoB,CAAE,CAC9CF,UAAU,CAACjE,GAAG,CAAC,CAAG,GAAI,CAAAoE,wBAAiB,CACrCF,GAAG,CAACG,MAAM,CACVH,GAAG,CAACI,UAAU,CACdJ,GAAG,CAACK,IAAI,CACRL,GAAG,CAACM,QAAQ,GAAK,IAAI,CACtB,C,CACF,IAAM,IAAIN,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,OAAO,CAAE,CACxC;AACA,GAAID,GAAG,CAACO,SAAS,CAAE,CACjB,GAAI,CAAAC,gBAAgB,CAAGtB,MAAM,CAACc,GAAG,CAACO,SAAS,CAAC,CAC5C,GAAI,MAAO,CAAAC,gBAAgB,GAAK,UAAU,CAAE,CAC1C,GAAI,CACF;AACA,GAAI,CAAAC,KAAK,CAAG,GAAI,CAAAD,gBAAgB,CAACR,GAAG,CAACU,OAAO,CAAC,CAC7C;AACA;AACAD,KAAK,CAACE,KAAK,CAAG,EAAE,CAChBZ,UAAU,CAACjE,GAAG,CAAC,CAAG2E,KAAK,C,CACvB,MAAOxD,CAAC,CAAE,CACV;AAAA,CAEH,CACF,CAED,GAAI8C,UAAU,CAACjE,GAAG,CAAC,EAAI,IAAI,CAAE,CAC3B,GAAI,CAAA2E,KAAK,CAAG,GAAI,CAAApC,KAAK,CAAC2B,GAAG,CAACU,OAAO,CAAC,CAClC;AACA;AACAD,KAAK,CAACE,KAAK,CAAG,EAAE,CAChBZ,UAAU,CAACjE,GAAG,CAAC,CAAG2E,KAAK,CACxB,CACF,KAAM,CACLV,UAAU,CAACjE,GAAG,CAAC,CAAGkE,GAAG,CACtB,CACF,CACD,MAAO,CAAAD,UAAU,CACnB,CAkBA,KAAM,CAAAa,qBAAqB,cAAGC,KAAK,CAACC,aAAa,CAA8B,CAC7EC,eAAe,CAAE,KAClB,GACD,GAAAzD,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXoD,qBAAqB,CAACI,WAAW,CAAG,gBAAgB,CACrD,CAOK,MAAAC,eAAe,cAAGJ,KAAK,CAACC,aAAa,CAAwB,GAAI,CAAAI,GAAG,EAAE,EAC5E,GAAA5D,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXyD,eAAe,CAACD,WAAW,CAAG,UAAU,CACzC,CAID;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AAoBE,EACF,KAAM,CAAAG,gBAAgB,CAAG,iBAAiB,CAC1C,KAAM,CAAAC,mBAAmB,CAAGP,KAAK,CAACM,gBAAgB,CAAC,CAEnD,QAAS,CAAAE,mBAAmBA,CAACC,EAAc,EACzC,GAAIF,mBAAmB,CAAE,CACvBA,mBAAmB,CAACE,EAAE,CAAC,CACxB,KAAM,CACLA,EAAE,EAAE,CACL,CACH,CASA,KAAM,CAAAC,QAAQ,CAOZC,YAAA,EANA,IAAM,CAAArB,MAAA,CAAwC,SAAS,CAOrD,IAAI,CAACsB,OAAO,CAAG,GAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAI,CAC7C,IAAI,CAACD,OAAO,CAAI5F,KAAK,EAAI,CACvB,GAAI,IAAI,CAACoE,MAAM,GAAK,SAAS,CAAE,CAC7B,IAAI,CAACA,MAAM,CAAG,UAAU,CACxBwB,OAAO,CAAC5F,KAAK,CAAC,CACf,C,CACF,CACD,IAAI,CAAC6F,MAAM,CAAIC,MAAM,EAAI,CACvB,GAAI,IAAI,CAAC1B,MAAM,GAAK,SAAS,CAAE,CAC7B,IAAI,CAACA,MAAM,CAAG,UAAU,CACxByB,MAAM,CAACC,MAAM,CAAC,CACf,C,CACF,CACH,CAAC,CAAC,CACJ,CACD,CAED;;AAEG,GACG,QAAU,CAAAC,cAAcA,CAAAC,IAAA,CAIR,IAJS,CAC7BC,eAAe,CACfC,MAAM,CACNpD,MACoB,EAAAkD,IAAA,CACpB,GAAI,CAACrC,KAAK,CAAEwC,YAAY,CAAC,CAAGrB,KAAK,CAACsB,QAAQ,CAACF,MAAM,CAACvC,KAAK,CAAC,CACxD,GAAI,CAAC0C,YAAY,CAAEC,eAAe,CAAC,CAAGxB,KAAK,CAACsB,QAAQ,EAAe,CACnE,GAAI,CAACG,SAAS,CAAEC,YAAY,CAAC,CAAG1B,KAAK,CAACsB,QAAQ,CAA8B,CAC1EpB,eAAe,CAAE,KAClB,EAAC,CACF,GAAI,CAACyB,SAAS,CAAEC,YAAY,CAAC,CAAG5B,KAAK,CAACsB,QAAQ,EAAkB,CAChE,GAAI,CAACO,UAAU,CAAEC,aAAa,CAAC,CAAG9B,KAAK,CAACsB,QAAQ,EAAkB,CAClE,GAAI,CAACS,YAAY,CAAEC,eAAe,CAAC,CAAGhC,KAAK,CAACsB,QAAQ,EAIhD,CACJ,GAAI,CAAAW,WAAW,CAAGjC,KAAK,CAACkC,MAAM,CAAmB,GAAI,CAAA7B,GAAG,EAAE,CAAC,CAC3D,GAAI,CAAE8B,kBAAkB,CAAE,CAAGnE,MAAM,EAAI,EAAE,CAEzC,GAAI,CAAAoE,oBAAoB,CAAGpC,KAAK,CAACqC,WAAW,CACzC5B,EAAc,EAAI,CACjB,GAAI0B,kBAAkB,CAAE,CACtB3B,mBAAmB,CAACC,EAAE,CAAC,CACxB,KAAM,CACLA,EAAE,EAAE,CACL,CACH,CAAC,CACD,CAAC0B,kBAAkB,CAAC,CACrB,CAED,GAAI,CAAAG,QAAQ,CAAGtC,KAAK,CAACqC,WAAW,CAC9B,CACEE,QAAqB,CAAAC,KAAA,GAEnB,IADF,CAAEC,eAAe,CAAEC,2BAA2B,CAAEC,kBAAkB,CAAE,CAAAH,KAAA,CAEpEC,eAAe,CAAC/G,OAAO,CAAET,GAAG,EAAKgH,WAAW,CAACW,OAAO,CAACC,MAAM,CAAC5H,GAAG,CAAC,CAAC,CACjEsH,QAAQ,CAACO,QAAQ,CAACpH,OAAO,CAAC,CAACqH,OAAO,CAAE9H,GAAG,GAAI,CACzC,GAAI8H,OAAO,CAACvD,IAAI,GAAK7B,SAAS,CAAE,CAC9BsE,WAAW,CAACW,OAAO,CAACI,GAAG,CAAC/H,GAAG,CAAE8H,OAAO,CAACvD,IAAI,CAAC,CAC3C,CACH,CAAC,CAAC,CAEF,GACE,CAACmD,kBAAkB,EACnBvB,MAAM,CAAC/C,MAAM,EAAI,IAAI,EACrB,MAAO,CAAA+C,MAAM,CAAC/C,MAAM,CAACnC,QAAQ,CAAC+G,mBAAmB,GAAK,UAAU,CAChE,CACA;AACAb,oBAAoB,CAAC,IAAMf,YAAY,CAACkB,QAAQ,CAAC,CAAC,CACnD,KAAM,IAAIV,UAAU,EAAIF,SAAS,CAAE,CAClC;AACA;AACAA,SAAS,CAACb,OAAO,EAAE,CACnBe,UAAU,CAACqB,cAAc,EAAE,CAC3BlB,eAAe,CAAC,CACdnD,KAAK,CAAE0D,QAAQ,CACfY,eAAe,CAAER,kBAAkB,CAACQ,eAAe,CACnDC,YAAY,CAAET,kBAAkB,CAACS,YAClC,EAAC,CACH,KAAM,CACL;AACA5B,eAAe,CAACe,QAAQ,CAAC,CACzBb,YAAY,CAAC,CACXxB,eAAe,CAAE,IAAI,CACrBiD,eAAe,CAAER,kBAAkB,CAACQ,eAAe,CACnDC,YAAY,CAAET,kBAAkB,CAACS,YAClC,EAAC,CACH,CACH,CAAC,CACD,CAAChC,MAAM,CAAC/C,MAAM,CAAEwD,UAAU,CAAEF,SAAS,CAAEM,WAAW,CAAEG,oBAAoB,CAAC,CAC1E,CAED;AACA;AACApC,KAAK,CAACqD,eAAe,CAAC,IAAMjC,MAAM,CAACkC,SAAS,CAAChB,QAAQ,CAAC,CAAE,CAAClB,MAAM,CAAEkB,QAAQ,CAAC,CAAC,CAE3E;AACA;AACAtC,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI9B,SAAS,CAACvB,eAAe,CAAE,CAC7B0B,YAAY,CAAC,GAAI,CAAAlB,QAAQ,EAAQ,CAAC,CACnC,CACH,CAAC,CAAE,CAACe,SAAS,CAACvB,eAAe,CAAC,CAAC,CAE/B;AACA;AACA;AACAF,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI5B,SAAS,EAAIJ,YAAY,EAAIH,MAAM,CAAC/C,MAAM,CAAE,CAC9C,GAAI,CAAAkE,QAAQ,CAAGhB,YAAY,CAC3B,GAAI,CAAAiC,aAAa,CAAG7B,SAAS,CAACf,OAAO,CACrC,GAAI,CAAAiB,UAAU,CAAGT,MAAM,CAAC/C,MAAM,CAACnC,QAAQ,CAAC+G,mBAAmB,CAAC,SAAW,CACrEb,oBAAoB,CAAC,IAAMf,YAAY,CAACkB,QAAQ,CAAC,CAAC,CAClD,KAAM,CAAAiB,aAAa,CACrB,CAAC,CAAC,CACF3B,UAAU,CAAC4B,QAAQ,CAACC,OAAO,CAAC,IAAK,CAC/B9B,YAAY,CAACjE,SAAS,CAAC,CACvBmE,aAAa,CAACnE,SAAS,CAAC,CACxB6D,eAAe,CAAC7D,SAAS,CAAC,CAC1B+D,YAAY,CAAC,CAAExB,eAAe,CAAE,KAAK,CAAE,CAAC,CAC1C,CAAC,CAAC,CACF4B,aAAa,CAACD,UAAU,CAAC,CAC1B,CACH,CAAC,CAAE,CAACO,oBAAoB,CAAEb,YAAY,CAAEI,SAAS,CAAEP,MAAM,CAAC/C,MAAM,CAAC,CAAC,CAElE;AACA;AACA2B,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GACE5B,SAAS,EACTJ,YAAY,EACZ1C,KAAK,CAAC8E,QAAQ,CAAC1I,GAAG,GAAKsG,YAAY,CAACoC,QAAQ,CAAC1I,GAAG,CAChD,CACA0G,SAAS,CAACb,OAAO,EAAE,CACpB,CACH,CAAC,CAAE,CAACa,SAAS,CAAEE,UAAU,CAAEhD,KAAK,CAAC8E,QAAQ,CAAEpC,YAAY,CAAC,CAAC,CAEzD;AACA;AACAvB,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI,CAAC9B,SAAS,CAACvB,eAAe,EAAI6B,YAAY,CAAE,CAC9CP,eAAe,CAACO,YAAY,CAAClD,KAAK,CAAC,CACnC6C,YAAY,CAAC,CACXxB,eAAe,CAAE,IAAI,CACrBiD,eAAe,CAAEpB,YAAY,CAACoB,eAAe,CAC7CC,YAAY,CAAErB,YAAY,CAACqB,YAC5B,EAAC,CACFpB,eAAe,CAACrE,SAAS,CAAC,CAC3B,C,CACF,CAAE,CAAC8D,SAAS,CAACvB,eAAe,CAAE6B,YAAY,CAAC,CAAC,CAE7C,GAAI,CAAA6B,SAAS,CAAG5D,KAAK,CAAC6D,OAAO,CAAC,IAAgB,CAC5C,MAAO,CACLC,UAAU,CAAE1C,MAAM,CAAC0C,UAAU,CAC7BC,cAAc,CAAE3C,MAAM,CAAC2C,cAAc,CACrCC,EAAE,CAAGC,CAAC,EAAK7C,MAAM,CAAC8C,QAAQ,CAACD,CAAC,CAAC,CAC7BE,IAAI,CAAEA,CAACC,EAAE,CAAEvF,KAAK,CAAEf,IAAI,GACpBsD,MAAM,CAAC8C,QAAQ,CAACE,EAAE,CAAE,CAClBvF,KAAK,CACLwF,kBAAkB,CAAEvG,IAAI,EAAJ,YAAAA,IAAI,CAAEuG,kB,CAC3B,CAAC,CACJC,OAAO,CAAEA,CAACF,EAAE,CAAEvF,KAAK,CAAEf,IAAI,GACvBsD,MAAM,CAAC8C,QAAQ,CAACE,EAAE,CAAE,CAClBE,OAAO,CAAE,IAAI,CACbzF,KAAK,CACLwF,kBAAkB,CAAEvG,IAAI,EAAJ,YAAAA,IAAI,CAAEuG,kB,CAC3B,C,CACJ,CACH,CAAC,CAAE,CAACjD,MAAM,CAAC,CAAC,CAEZ,GAAI,CAAAtE,QAAQ,CAAGsE,MAAM,CAACtE,QAAQ,EAAI,GAAG,CAErC,GAAI,CAAAyH,iBAAiB,CAAGvE,KAAK,CAAC6D,OAAO,CACnC,KAAO,CACLzC,MAAM,CACNwC,SAAS,CACTY,MAAM,CAAE,KAAK,CACb1H,Q,CACD,CAAC,CACF,CAACsE,MAAM,CAAEwC,SAAS,CAAE9G,QAAQ,CAAC,CAC9B,CAED;AACA;AACA;AACA;AACA;AACA;AACA,mBACEkD,KAAA,CAAA7D,aAAA,CAAA6D,KAAA,CAAAyE,QAAA,mBACEzE,KAAA,CAAA7D,aAAA,CAACuI,wBAAiB,CAACC,QAAQ,CAAC,CAAAzJ,KAAK,CAAEqJ,iB,CAAiB,cAClDvE,KAAA,CAAA7D,aAAA,CAACyI,6BAAsB,CAACD,QAAQ,CAAC,CAAAzJ,KAAK,CAAE2D,K,CAAK,cAC3CmB,KAAC,CAAA7D,aAAA,CAAAiE,eAAe,CAACuE,QAAQ,EAACzJ,KAAK,CAAE+G,WAAW,CAACW,O,CAAO,cAClD5C,KAAA,CAAA7D,aAAA,CAAC4D,qBAAqB,CAAC4E,QAAQ,CAAC,CAAAzJ,KAAK,CAAEuG,SAAS,eAC9CzB,KAAC,CAAA7D,aAAA,CAAA0I,MAAM,CACL,CAAA/H,QAAQ,CAAEA,QAAQ,CAClB6G,QAAQ,CAAE9E,KAAK,CAAC8E,QAAQ,CACxBmB,cAAc,CAAEjG,KAAK,CAACkG,aAAa,CACnCnB,SAAS,CAAEA,S,CAAS,CAEnB/E,KAAK,CAACmG,WAAW,cAChBhF,KAAC,CAAA7D,aAAA,CAAA8I,UAAU,CAAC,CAAApH,MAAM,CAAEuD,MAAM,CAACvD,MAAM,CAAEgB,KAAK,CAAEA,K,CAAS,EAEnDsC,eACD,CACM,CACsB,CACR,CACK,CACP,CAC5B,IAAI,CACJ,CAEP,CAEA,QAAS,CAAA8D,UAAUA,CAAAC,KAAA,CAMlB,IANmB,CAClBrH,MAAM,CACNgB,KAID,EAAAqG,KAAA,CACC,MAAO,CAAAC,oBAAa,CAACtH,MAAM,CAAEF,SAAS,CAAEkB,KAAK,CAAC,CAChD,CASA;;AAEG,GACG,QAAU,CAAAuG,aAAaA,CAAAC,KAAA,CAKR,IALS,CAC5BvI,QAAQ,CACRwI,QAAQ,CACRtH,MAAM,CACNK,MACmB,EAAAgH,KAAA,CACnB,GAAI,CAAAE,UAAU,CAAGvF,KAAK,CAACkC,MAAM,EAAkB,CAC/C,GAAIqD,UAAU,CAAC3C,OAAO,EAAI,IAAI,CAAE,CAC9B2C,UAAU,CAAC3C,OAAO,CAAGxE,oBAAoB,CAAC,CAAEC,MAAM,CAAEmH,QAAQ,CAAE,IAAI,CAAE,CAAC,CACtE,CAED,GAAI,CAAArH,OAAO,CAAGoH,UAAU,CAAC3C,OAAO,CAChC,GAAI,CAAC/D,KAAK,CAAEwC,YAAY,CAAC,CAAGrB,KAAK,CAACsB,QAAQ,CAAC,CACzCtE,MAAM,CAAEmB,OAAO,CAACnB,MAAM,CACtB2G,QAAQ,CAAExF,OAAO,CAACwF,QACnB,EAAC,CACF,GAAI,CAAExB,kBAAkB,CAAE,CAAGnE,MAAM,EAAI,EAAE,CACzC,GAAI,CAAAsE,QAAQ,CAAGtC,KAAK,CAACqC,WAAW,CAC7BE,QAAwD,EAAI,CAC3DJ,kBAAkB,EAAI5B,mBAAmB,CACrCA,mBAAmB,CAAC,IAAMc,YAAY,CAACkB,QAAQ,CAAC,CAAC,CACjDlB,YAAY,CAACkB,QAAQ,CAAC,CAC5B,CAAC,CACD,CAAClB,YAAY,CAAEc,kBAAkB,CAAC,CACnC,CAEDnC,KAAK,CAACqD,eAAe,CAAC,IAAMlF,OAAO,CAACsH,MAAM,CAACnD,QAAQ,CAAC,CAAE,CAACnE,OAAO,CAAEmE,QAAQ,CAAC,CAAC,CAE1E,mBACEtC,KAAA,CAAA7D,aAAA,CAAC0I,MAAM,EACL/H,QAAQ,CAAEA,QAAQ,CAClBwI,QAAQ,CAAEA,QAAQ,CAClB3B,QAAQ,CAAE9E,KAAK,CAAC8E,QAAQ,CACxBmB,cAAc,CAAEjG,KAAK,CAAC7B,MAAM,CAC5B4G,SAAS,CAAEzF,OAAO,EAClB,CAEN,CASA;;;AAGG,GACG,QAAU,CAAAuH,UAAUA,CAAAC,KAAA,CAKR,IALS,CACzB7I,QAAQ,CACRwI,QAAQ,CACRtH,MAAM,CACNK,MACgB,EAAAsH,KAAA,CAChB,GAAI,CAAAJ,UAAU,CAAGvF,KAAK,CAACkC,MAAM,EAAe,CAC5C,GAAIqD,UAAU,CAAC3C,OAAO,EAAI,IAAI,CAAE,CAC9B2C,UAAU,CAAC3C,OAAO,CAAGjE,iBAAiB,CAAC,CAAEN,MAAM,CAAEmH,QAAQ,CAAE,IAAI,CAAE,CAAC,CACnE,CAED,GAAI,CAAArH,OAAO,CAAGoH,UAAU,CAAC3C,OAAO,CAChC,GAAI,CAAC/D,KAAK,CAAEwC,YAAY,CAAC,CAAGrB,KAAK,CAACsB,QAAQ,CAAC,CACzCtE,MAAM,CAAEmB,OAAO,CAACnB,MAAM,CACtB2G,QAAQ,CAAExF,OAAO,CAACwF,QACnB,EAAC,CACF,GAAI,CAAExB,kBAAkB,CAAE,CAAGnE,MAAM,EAAI,EAAE,CACzC,GAAI,CAAAsE,QAAQ,CAAGtC,KAAK,CAACqC,WAAW,CAC7BE,QAAwD,EAAI,CAC3DJ,kBAAkB,EAAI5B,mBAAmB,CACrCA,mBAAmB,CAAC,IAAMc,YAAY,CAACkB,QAAQ,CAAC,CAAC,CACjDlB,YAAY,CAACkB,QAAQ,CAAC,CAC5B,CAAC,CACD,CAAClB,YAAY,CAAEc,kBAAkB,CAAC,CACnC,CAEDnC,KAAK,CAACqD,eAAe,CAAC,IAAMlF,OAAO,CAACsH,MAAM,CAACnD,QAAQ,CAAC,CAAE,CAACnE,OAAO,CAAEmE,QAAQ,CAAC,CAAC,CAE1E,mBACEtC,KAAA,CAAA7D,aAAA,CAAC0I,MAAM,EACL/H,QAAQ,CAAEA,QAAQ,CAClBwI,QAAQ,CAAEA,QAAQ,CAClB3B,QAAQ,CAAE9E,KAAK,CAAC8E,QAAQ,CACxBmB,cAAc,CAAEjG,KAAK,CAAC7B,MAAM,CAC5B4G,SAAS,CAAEzF,OAAO,EAClB,CAEN,CASA;;;;;AAKG,GACH,QAAS,CAAAyH,aAAaA,CAAAC,KAAA,CAKD,IALE,CACrB/I,QAAQ,CACRwI,QAAQ,CACRtH,MAAM,CACNG,OACmB,EAAA0H,KAAA,CACnB,GAAI,CAAChH,KAAK,CAAEwC,YAAY,CAAC,CAAGrB,KAAK,CAACsB,QAAQ,CAAC,CACzCtE,MAAM,CAAEmB,OAAO,CAACnB,MAAM,CACtB2G,QAAQ,CAAExF,OAAO,CAACwF,QACnB,EAAC,CACF,GAAI,CAAExB,kBAAkB,CAAE,CAAGnE,MAAM,EAAI,EAAE,CACzC,GAAI,CAAAsE,QAAQ,CAAGtC,KAAK,CAACqC,WAAW,CAC7BE,QAAwD,EAAI,CAC3DJ,kBAAkB,EAAI5B,mBAAmB,CACrCA,mBAAmB,CAAC,IAAMc,YAAY,CAACkB,QAAQ,CAAC,CAAC,CACjDlB,YAAY,CAACkB,QAAQ,CAAC,CAC5B,CAAC,CACD,CAAClB,YAAY,CAAEc,kBAAkB,CAAC,CACnC,CAEDnC,KAAK,CAACqD,eAAe,CAAC,IAAMlF,OAAO,CAACsH,MAAM,CAACnD,QAAQ,CAAC,CAAE,CAACnE,OAAO,CAAEmE,QAAQ,CAAC,CAAC,CAE1E,mBACEtC,KAAA,CAAA7D,aAAA,CAAC0I,MAAM,EACL/H,QAAQ,CAAEA,QAAQ,CAClBwI,QAAQ,CAAEA,QAAQ,CAClB3B,QAAQ,CAAE9E,KAAK,CAAC8E,QAAQ,CACxBmB,cAAc,CAAEjG,KAAK,CAAC7B,MAAM,CAC5B4G,SAAS,CAAEzF,OAAO,EAClB,CAEN,CAEA,GAAA1B,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXiJ,aAAa,CAACzF,WAAW,CAAG,wBAAwB,CACrD,CAeD,KAAM,CAAA2F,SAAS,CACb,MAAO,CAAAzH,MAAM,GAAK,WAAW,EAC7B,MAAO,CAAAA,MAAM,CAACnC,QAAQ,GAAK,WAAW,EACtC,MAAO,CAAAmC,MAAM,CAACnC,QAAQ,CAACC,aAAa,GAAK,WAAW,CAEtD,KAAM,CAAA4J,kBAAkB,CAAG,+BAA+B,CAE1D;;AAEG,GACU,MAAAC,IAAI,cAAGhG,KAAK,CAACiG,UAAU,CAClC,QAAS,CAAAC,WAAWA,CAAAC,KAAA,CAalBC,GAAG,KAZH,CACEC,OAAO,CACPC,QAAQ,CACRC,cAAc,CACdjC,OAAO,CACPzF,KAAK,CACLvE,MAAM,CACN8J,EAAE,CACFC,kBAAkB,CAClBmC,uBACO,CACR,CAAAL,KAAA,CADIM,IAAI,CAAAC,6BAAA,CAAAP,KAAA,CAAAQ,SAAA,EAIT,GAAI,CAAE7J,QAAQ,CAAE,CAAGkD,KAAK,CAAC4G,UAAU,CAACC,wBAAiB,CAAC,CAEtD;AACA,GAAI,CAAAC,YAAY,CAChB,GAAI,CAAAC,UAAU,CAAG,KAAK,CAEtB,GAAI,MAAO,CAAA3C,EAAE,GAAK,QAAQ,EAAI2B,kBAAkB,CAACiB,IAAI,CAAC5C,EAAE,CAAC,CAAE,CACzD;AACA0C,YAAY,CAAG1C,EAAE,CAEjB;AACA,GAAI0B,SAAS,CAAE,CACb,GAAI,CACF,GAAI,CAAAmB,UAAU,CAAG,GAAI,CAAAC,GAAG,CAAC7I,MAAM,CAACsF,QAAQ,CAACwD,IAAI,CAAC,CAC9C,GAAI,CAAAC,SAAS,CAAGhD,EAAE,CAACiD,UAAU,CAAC,IAAI,CAAC,CAC/B,GAAI,CAAAH,GAAG,CAACD,UAAU,CAACK,QAAQ,CAAGlD,EAAE,CAAC,CACjC,GAAI,CAAA8C,GAAG,CAAC9C,EAAE,CAAC,CACf,GAAI,CAAAmD,IAAI,CAAGlK,aAAa,CAAC+J,SAAS,CAACI,QAAQ,CAAE1K,QAAQ,CAAC,CAEtD,GAAIsK,SAAS,CAACK,MAAM,GAAKR,UAAU,CAACQ,MAAM,EAAIF,IAAI,EAAI,IAAI,CAAE,CAC1D;AACAnD,EAAE,CAAGmD,IAAI,CAAGH,SAAS,CAACM,MAAM,CAAGN,SAAS,CAACO,IAAI,CAC9C,KAAM,CACLZ,UAAU,CAAG,IAAI,CAClB,C,CACD,MAAO3K,CAAC,CAAE,CACV;AACAK,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAAC,cAAO,CACL,KAAK,CACL,cAAawH,EAAE,6GACsC,CACtD,QACF,CACF,CACF,CAED;AACA,GAAI,CAAA+C,IAAI,CAAGS,OAAO,CAACxD,EAAE,CAAE,CAAEkC,QAAU,EAAC,CAEpC,GAAI,CAAAuB,eAAe,CAAGC,mBAAmB,CAAC1D,EAAE,CAAE,CAC5CE,OAAO,CACPzF,KAAK,CACLvE,MAAM,CACN+J,kBAAkB,CAClBiC,QAAQ,CACRE,uBACD,EAAC,CACF,QAAS,CAAAuB,WAAWA,CAClB/N,KAAsD,EAEtD,GAAIqM,OAAO,CAAEA,OAAO,CAACrM,KAAK,CAAC,CAC3B,GAAI,CAACA,KAAK,CAACgO,gBAAgB,CAAE,CAC3BH,eAAe,CAAC7N,KAAK,CAAC,CACvB,CACH,CAEA,oBACE;AACAgG,KAAA,CAAA7D,aAAA,KAAA8B,QAAA,IACMwI,IAAI,EACRU,IAAI,CAAEL,YAAY,EAAIK,IAAI,CAC1Bd,OAAO,CAAEU,UAAU,EAAIR,cAAc,CAAGF,OAAO,CAAG0B,WAAW,CAC7D3B,GAAG,CAAEA,GAAG,CACR9L,MAAM,CAAEA,M,CAAM,IAGpB,CAAC,EAGH,GAAAmC,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXqJ,IAAI,CAAC7F,WAAW,CAAG,MAAM,CAC1B,CAoBD;;AAEG,GACU,MAAA8H,OAAO,cAAGjI,KAAK,CAACiG,UAAU,CACrC,QAAS,CAAAiC,cAAcA,CAAAC,KAAA,CAYrB/B,GAAG,KAXH,CACE,cAAc,CAAEgC,eAAe,CAAG,MAAM,CACxCC,aAAa,CAAG,KAAK,CACrBC,SAAS,CAAEC,aAAa,CAAG,EAAE,CAC7BC,GAAG,CAAG,KAAK,CACXC,KAAK,CAAEC,SAAS,CAChBtE,EAAE,CACFoC,uBAAuB,CACvBlB,QAED,EAAA6C,KAAA,CADI1B,IAAI,CAAAC,6BAAA,CAAAyB,KAAA,CAAAQ,UAAA,EAIT,GAAI,CAAApB,IAAI,CAAGqB,eAAe,CAACxE,EAAE,CAAE,CAAEkC,QAAQ,CAAEG,IAAI,CAACH,QAAQ,CAAE,CAAC,CAC3D,GAAI,CAAA3C,QAAQ,CAAGkF,WAAW,EAAE,CAC5B,GAAI,CAAAC,WAAW,CAAG9I,KAAK,CAAC4G,UAAU,CAAChC,6BAAsB,CAAC,CAC1D,GAAI,CAAEhB,SAAS,CAAE,CAAG5D,KAAK,CAAC4G,UAAU,CAACC,wBAAiB,CAAC,CACvD,GAAI,CAAA3G,eAAe,CACjB4I,WAAW,EAAI,IAAI,EACnB;AACA;AACAC,sBAAsB,CAACxB,IAAI,CAAC,EAC5Bf,uBAAuB,GAAK,IAAI,CAElC,GAAI,CAAAwC,UAAU,CAAGpF,SAAS,CAACG,cAAc,CACrCH,SAAS,CAACG,cAAc,CAACwD,IAAI,CAAC,CAACC,QAAQ,CACvCD,IAAI,CAACC,QAAQ,CACjB,GAAI,CAAAyB,gBAAgB,CAAGtF,QAAQ,CAAC6D,QAAQ,CACxC,GAAI,CAAA0B,oBAAoB,CACtBJ,WAAW,EAAIA,WAAW,CAACK,UAAU,EAAIL,WAAW,CAACK,UAAU,CAACxF,QAAQ,CACpEmF,WAAW,CAACK,UAAU,CAACxF,QAAQ,CAAC6D,QAAQ,CACxC,IAAI,CAEV,GAAI,CAACa,aAAa,CAAE,CAClBY,gBAAgB,CAAGA,gBAAgB,CAACrP,WAAW,EAAE,CACjDsP,oBAAoB,CAAGA,oBAAoB,CACvCA,oBAAoB,CAACtP,WAAW,EAAE,CAClC,IAAI,CACRoP,UAAU,CAAGA,UAAU,CAACpP,WAAW,EAAE,CACtC,CAED,GAAI,CAAAwP,QAAQ,CACVH,gBAAgB,GAAKD,UAAU,EAC9B,CAACR,GAAG,EACHS,gBAAgB,CAAC5B,UAAU,CAAC2B,UAAU,CAAC,EACvCC,gBAAgB,CAACI,MAAM,CAACL,UAAU,CAACM,MAAM,CAAC,GAAK,GAAI,CAEvD,GAAI,CAAAC,SAAS,CACXL,oBAAoB,EAAI,IAAI,GAC3BA,oBAAoB,GAAKF,UAAU,EACjC,CAACR,GAAG,EACHU,oBAAoB,CAAC7B,UAAU,CAAC2B,UAAU,CAAC,EAC3CE,oBAAoB,CAACG,MAAM,CAACL,UAAU,CAACM,MAAM,CAAC,GAAK,GAAI,CAAC,CAE9D,GAAI,CAAAE,WAAW,CAAG,CAChBJ,QAAQ,CACRG,SAAS,CACTrJ,e,CACD,CAED,GAAI,CAAAuJ,WAAW,CAAGL,QAAQ,CAAGhB,eAAe,CAAGzK,SAAS,CAExD,GAAI,CAAA2K,SAA6B,CACjC,GAAI,MAAO,CAAAC,aAAa,GAAK,UAAU,CAAE,CACvCD,SAAS,CAAGC,aAAa,CAACiB,WAAW,CAAC,CACvC,KAAM,CACL;AACA;AACA;AACA;AACA;AACAlB,SAAS,CAAG,CACVC,aAAa,CACba,QAAQ,CAAG,QAAQ,CAAG,IAAI,CAC1BG,SAAS,CAAG,SAAS,CAAG,IAAI,CAC5BrJ,eAAe,CAAG,eAAe,CAAG,IAAI,CACzC,CACEwJ,MAAM,CAACC,OAAO,CAAC,CACfC,IAAI,CAAC,GAAG,CAAC,CACb,CAED,GAAI,CAAAnB,KAAK,CACP,MAAO,CAAAC,SAAS,GAAK,UAAU,CAAGA,SAAS,CAACc,WAAW,CAAC,CAAGd,SAAS,CAEtE,mBACE1I,KAAA,CAAA7D,aAAA,CAAC6J,IAAI,CAAA/H,QAAA,IACCwI,IAAI,EACM,eAAAgD,WAAW,CACzBnB,SAAS,CAAEA,SAAS,CACpBlC,GAAG,CAAEA,GAAG,CACRqC,KAAK,CAAEA,KAAK,CACZrE,EAAE,CAAEA,EAAE,CACNoC,uBAAuB,CAAEA,uB,CAExB,QAAO,CAAAlB,QAAQ,GAAK,UAAU,CAAGA,QAAQ,CAACkE,WAAW,CAAC,CAAGlE,QAAQ,CAC7D,CAEX,CAAC,EAGH,GAAA7I,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXsL,OAAO,CAAC9H,WAAW,CAAG,SAAS,CAChC,CAsFD;;;;;AAKG,GACI,KAAM,CAAA0J,IAAI,cAAG7J,KAAK,CAACiG,UAAU,CAClC,CAAA6D,KAAA,CAeEC,YAAY,GACV,IAfF,CACEC,UAAU,CACV9F,QAAQ,CACRqC,cAAc,CACdjC,OAAO,CACPzF,KAAK,CACL9B,MAAM,CAAGzD,aAAa,CACtB0D,MAAM,CACNiN,QAAQ,CACR3D,QAAQ,CACRjC,kBAAkB,CAClBmC,uB,CAED,CAAAsD,KAAA,CADII,KAAK,CAAAxD,6BAAA,CAAAoD,KAAA,CAAAK,UAAA,EAIV,GAAI,CAAAC,MAAM,CAAGC,SAAS,EAAE,CACxB,GAAI,CAAAC,UAAU,CAAGC,aAAa,CAACvN,MAAM,CAAE,CAAEsJ,QAAU,EAAC,CACpD,GAAI,CAAAkE,UAAU,CACZzN,MAAM,CAACnD,WAAW,EAAE,GAAK,KAAK,CAAG,KAAK,CAAG,MAAM,CAEjD,GAAI,CAAA6Q,aAAa,CAA6CzQ,KAAK,EAAI,CACrEiQ,QAAQ,EAAIA,QAAQ,CAACjQ,KAAK,CAAC,CAC3B,GAAIA,KAAK,CAACgO,gBAAgB,CAAE,OAC5BhO,KAAK,CAAC0Q,cAAc,EAAE,CAEtB,GAAI,CAAAC,SAAS,CAAI3Q,KAAoC,CAAC4Q,WAAW,CAC9DD,SAAqC,CAExC,GAAI,CAAAE,YAAY,CACb,CAAAF,SAAS,EAAT,YAAAA,SAAS,CAAEvN,YAAY,CAAC,YAAY,CAAgC,GACrEL,MAAM,CAERqN,MAAM,CAACO,SAAS,EAAI3Q,KAAK,CAAC8Q,aAAa,CAAE,CACvCd,UAAU,CACVjN,MAAM,CAAE8N,YAAY,CACpB3G,QAAQ,CACRI,OAAO,CACPzF,KAAK,CACLyH,QAAQ,CACRjC,kBAAkB,CAClBmC,uBACD,EAAC,C,CACH,CAED,mBACExG,KAAA,CAAA7D,aAAA,QAAA8B,QAAA,EACEmI,GAAG,CAAE2D,YAAY,CACjBhN,MAAM,CAAEyN,UAAU,CAClBxN,MAAM,CAAEsN,UAAU,CAClBL,QAAQ,CAAE1D,cAAc,CAAG0D,QAAQ,CAAGQ,a,CAClC,CAAAP,KAAK,EACT,CAEN,CAAC,EAGH,GAAAzN,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXkN,IAAI,CAAC1J,WAAW,CAAG,MAAM,CAC1B,CAOD;;;AAGG,G,QACa,CAAA4K,iBAAiBA,CAAAC,MAAA,CAGR,IAHS,CAChCC,MAAM,CACNC,UACuB,EAAAF,MAAA,CACvBG,oBAAoB,CAAC,CAAEF,MAAM,CAAEC,UAAU,CAAE,CAAC,CAC5C,MAAO,KAAI,CACb,CAEA,GAAAzO,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACXoO,iBAAiB,CAAC5K,WAAW,CAAG,mBAAmB,CACpD,CACD;AAEA;AACA;AACA;AAEA,GAAK,CAAAiL,cAMJ,CAND,UAAKA,cAAc,EACjBA,cAAA,+CAA6C,CAC7CA,cAAA,yBAAuB,CACvBA,cAAA,uCAAqC,CACrCA,cAAA,2BAAyB,CACzBA,cAAA,mDAAiD,CACnD,CAAC,EANIA,cAAc,GAAdA,cAAc,CAMlB,KAED,GAAK,CAAAC,mBAIJ,CAJD,UAAKA,mBAAmB,EACtBA,mBAAA,2BAAyB,CACzBA,mBAAA,6BAA2B,CAC3BA,mBAAA,+CAA6C,CAC/C,CAAC,EAJIA,mBAAmB,GAAnBA,mBAAmB,CAIvB,KAED;AAEA,QAAS,CAAAC,yBAAyBA,CAChCC,QAA8C,EAE9C,MAAU,CAAAA,QAAQ,8FACpB,CAEA,QAAS,CAAAC,oBAAoBA,CAACD,QAAwB,EACpD,GAAI,CAAAE,GAAG,CAAGzL,KAAK,CAAC4G,UAAU,CAAClC,wBAAiB,CAAC,CAC7C,CAAU+G,GAAG,CAAAhP,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAb,aAAA+O,gBAAS,OAAMJ,yBAAyB,CAACC,QAAQ,CAAC,EAAlDG,gBAAS,eACT,MAAO,CAAAD,GAAG,CACZ,CAEA,QAAS,CAAAE,kBAAkBA,CAACJ,QAA6B,EACvD,GAAI,CAAA1M,KAAK,CAAGmB,KAAK,CAAC4G,UAAU,CAAChC,6BAAsB,CAAC,CACpD,CAAU/F,KAAK,CAAApC,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAf,aAAA+O,gBAAS,OAAQJ,yBAAyB,CAACC,QAAQ,CAAC,EAApDG,gBAAS,eACT,MAAO,CAAA7M,KAAK,CACd,CAEA;AAEA;;;;AAIG,GACG,QAAU,CAAAiJ,mBAAmBA,CACjC1D,EAAM,CAAAwH,KAAA,CAeA,IAdN,CACEtR,MAAM,CACNgK,OAAO,CAAEuH,WAAW,CACpBhN,KAAK,CACLwF,kBAAkB,CAClBiC,QAAQ,CACRE,uB,iBAQE,EAAE,CAAAoF,KAAA,CAEN,GAAI,CAAA1H,QAAQ,CAAG4H,WAAW,EAAE,CAC5B,GAAI,CAAAnI,QAAQ,CAAGkF,WAAW,EAAE,CAC5B,GAAI,CAAAtB,IAAI,CAAGqB,eAAe,CAACxE,EAAE,CAAE,CAAEkC,QAAU,EAAC,CAE5C,MAAO,CAAAtG,KAAK,CAACqC,WAAW,CACrBrI,KAAsC,EAAI,CACzC,GAAIK,sBAAsB,CAACL,KAAK,CAAEM,MAAM,CAAC,CAAE,CACzCN,KAAK,CAAC0Q,cAAc,EAAE,CAEtB;AACA;AACA,GAAI,CAAApG,OAAO,CACTuH,WAAW,GAAKlO,SAAS,CACrBkO,WAAW,CACXE,UAAU,CAACpI,QAAQ,CAAC,GAAKoI,UAAU,CAACxE,IAAI,CAAC,CAE/CrD,QAAQ,CAACE,EAAE,CAAE,CACXE,OAAO,CACPzF,KAAK,CACLwF,kBAAkB,CAClBiC,QAAQ,CACRE,uBACD,EAAC,CACH,C,CACF,CACD,CACE7C,QAAQ,CACRO,QAAQ,CACRqD,IAAI,CACJsE,WAAW,CACXhN,KAAK,CACLvE,MAAM,CACN8J,EAAE,CACFC,kBAAkB,CAClBiC,QAAQ,CACRE,uBAAuB,CACxB,CACF,CACH,CAEA;;;AAGG,GACG,QAAU,CAAAwF,eAAeA,CAC7BC,WAAiC,EAEjCxP,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAAC,cAAO,CACL,MAAO,CAAAlC,eAAe,GAAK,WAAW,CACtC,2IACqE,CACX,yGACR,sEACqB,CACG,iJACA,QACjE,CACV,QAED,GAAI,CAAAwR,sBAAsB,CAAGlM,KAAK,CAACkC,MAAM,CAAC1H,kBAAkB,CAACyR,WAAW,CAAC,CAAC,CAC1E,GAAI,CAAAE,qBAAqB,CAAGnM,KAAK,CAACkC,MAAM,CAAC,KAAK,CAAC,CAE/C,GAAI,CAAAyB,QAAQ,CAAGkF,WAAW,EAAE,CAC5B,GAAI,CAAApN,YAAY,CAAGuE,KAAK,CAAC6D,OAAO,CAC9B,IACE;AACA;AACA;AACAvI,0BAA0B,CACxBqI,QAAQ,CAAC+D,MAAM,CACfyE,qBAAqB,CAACvJ,OAAO,CAAG,IAAI,CAAGsJ,sBAAsB,CAACtJ,OAAO,CACtE,CACH,CAACe,QAAQ,CAAC+D,MAAM,CAAC,CAClB,CAED,GAAI,CAAAxD,QAAQ,CAAG4H,WAAW,EAAE,CAC5B,GAAI,CAAAM,eAAe,CAAGpM,KAAK,CAACqC,WAAW,CACrC,CAACgK,QAAQ,CAAEC,eAAe,GAAI,CAC5B,KAAM,CAAAC,eAAe,CAAG/R,kBAAkB,CACxC,MAAO,CAAA6R,QAAQ,GAAK,UAAU,CAAGA,QAAQ,CAAC5Q,YAAY,CAAC,CAAG4Q,QAAQ,CACnE,CACDF,qBAAqB,CAACvJ,OAAO,CAAG,IAAI,CACpCsB,QAAQ,CAAC,GAAG,CAAGqI,eAAe,CAAED,eAAe,CAAC,CAClD,CAAC,CACD,CAACpI,QAAQ,CAAEzI,YAAY,CAAC,CACzB,CAED,MAAO,CAACA,YAAY,CAAE2Q,eAAe,CAAC,CACxC,CA2CA,QAAS,CAAAI,4BAA4BA,CAAA,EACnC,GAAI,MAAO,CAAAtQ,QAAQ,GAAK,WAAW,CAAE,CACnC,KAAM,IAAI,CAAAsB,KAAK,CACb,mDAAmD,CACjD,8DAA8D,CACjE,CACF,CACH,CAEA,GAAI,CAAAiP,SAAS,CAAG,CAAC,CACjB,GAAI,CAAAC,kBAAkB,CAAGA,CAAA,QAAWC,MAAM,CAAC,EAAEF,SAAS,CAAC,CAAI,KAE3D;;;AAGG,G,QACa,CAAApC,SAASA,CAAA,EACvB,GAAI,CAAEjJ,MAAM,CAAE,CAAGoK,oBAAoB,CAACJ,cAAc,CAACwB,SAAS,CAAC,CAC/D,GAAI,CAAE9P,QAAQ,CAAE,CAAGkD,KAAK,CAAC4G,UAAU,CAACC,wBAAiB,CAAC,CACtD,GAAI,CAAAgG,cAAc,CAAGC,iBAAU,EAAE,CAEjC,MAAO,CAAA9M,KAAK,CAACqC,WAAW,CACtB,SAAC/H,MAAM,CAAEyS,OAAO,CAAS,IAAhBA,OAAO,WAAPA,OAAO,CAAG,EAAE,EACnBP,4BAA4B,EAAE,CAE9B,GAAI,CAAExP,MAAM,CAAED,MAAM,CAAEP,OAAO,CAAES,QAAQ,CAAEC,IAAI,CAAE,CAAGL,qBAAqB,CACrEvC,MAAM,CACNwC,QAAQ,CACT,CAED,GAAIiQ,OAAO,CAAC7I,QAAQ,GAAK,KAAK,CAAE,CAC9B,GAAI,CAAAjJ,GAAG,CAAG8R,OAAO,CAAC/C,UAAU,EAAI0C,kBAAkB,EAAE,CACpDtL,MAAM,CAAC4L,KAAK,CAAC/R,GAAG,CAAE4R,cAAc,CAAEE,OAAO,CAAC/P,MAAM,EAAIA,MAAM,CAAE,CAC1DqH,kBAAkB,CAAE0I,OAAO,CAAC1I,kBAAkB,CAC9CpH,QAAQ,CACRC,IAAI,CACJsN,UAAU,CAAEuC,OAAO,CAAChQ,MAAM,EAAKA,MAAyB,CACxDkQ,WAAW,CAAEF,OAAO,CAACvQ,OAAO,EAAKA,OAClC,EAAC,CACH,KAAM,CACL4E,MAAM,CAAC8C,QAAQ,CAAC6I,OAAO,CAAC/P,MAAM,EAAIA,MAAM,CAAE,CACxCqH,kBAAkB,CAAE0I,OAAO,CAAC1I,kBAAkB,CAC9CpH,QAAQ,CACRC,IAAI,CACJsN,UAAU,CAAEuC,OAAO,CAAChQ,MAAM,EAAKA,MAAyB,CACxDkQ,WAAW,CAAEF,OAAO,CAACvQ,OAAO,EAAKA,OAAuB,CACxD8H,OAAO,CAAEyI,OAAO,CAACzI,OAAO,CACxBzF,KAAK,CAAEkO,OAAO,CAAClO,KAAK,CACpBqO,WAAW,CAAEL,cAAc,CAC3BrG,uBAAuB,CAAEuG,OAAO,CAACvG,uBAClC,EAAC,CACH,C,CACF,CACD,CAACpF,MAAM,CAAEtE,QAAQ,CAAE+P,cAAc,CAAC,CACnC,CACH,CAEA;AACA;AACM,QAAU,CAAAtC,aAAaA,CAC3BvN,MAAe,CAAAmQ,MAAA,CACsC,IAArD,CAAE7G,Q,kBAAiD,EAAE,CAAA6G,MAAA,CAErD,GAAI,CAAErQ,QAAQ,CAAE,CAAGkD,KAAK,CAAC4G,UAAU,CAACC,wBAAiB,CAAC,CACtD,GAAI,CAAAuG,YAAY,CAAGpN,KAAK,CAAC4G,UAAU,CAACyG,mBAAY,CAAC,CACjD,CAAUD,YAAY,CAAA3Q,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAtB+O,gBAAS,OAAe,kDAAkD,EAA1EA,gBAAS,eAET,GAAI,CAAC4B,KAAK,CAAC,CAAGF,YAAY,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5C;AACA;AACA,GAAI,CAAAjG,IAAI,CAAAtJ,QAAA,CAAQ,GAAA2K,eAAe,CAAC5L,MAAM,CAAGA,MAAM,CAAG,GAAG,CAAE,CAAEsJ,QAAQ,CAAE,CAAC,CAAE,CAEtE;AACA;AACA;AACA;AACA;AACA,GAAI,CAAA3C,QAAQ,CAAGkF,WAAW,EAAE,CAC5B,GAAI7L,MAAM,EAAI,IAAI,CAAE,CAClB;AACA;AACAuK,IAAI,CAACG,MAAM,CAAG/D,QAAQ,CAAC+D,MAAM,CAE7B;AACA;AACA;AACA,GAAI4F,KAAK,CAACG,KAAK,CAACC,KAAK,CAAE,CACrB,GAAI,CAAAC,MAAM,CAAG,GAAI,CAAAjT,eAAe,CAAC6M,IAAI,CAACG,MAAM,CAAC,CAC7CiG,MAAM,CAAC9K,MAAM,CAAC,OAAO,CAAC,CACtB0E,IAAI,CAACG,MAAM,CAAGiG,MAAM,CAACC,QAAQ,EAAE,KAAOD,MAAM,CAACC,QAAQ,EAAE,CAAK,EAAE,CAC/D,CACF,CAED,GAAI,CAAC,CAAC5Q,MAAM,EAAIA,MAAM,GAAK,GAAG,GAAKsQ,KAAK,CAACG,KAAK,CAACC,KAAK,CAAE,CACpDnG,IAAI,CAACG,MAAM,CAAGH,IAAI,CAACG,MAAM,CACrBH,IAAI,CAACG,MAAM,CAACpD,OAAO,CAAC,KAAK,CAAE,SAAS,CAAC,CACrC,QAAQ,CACb,CAED;AACA;AACA;AACA;AACA,GAAIxH,QAAQ,GAAK,GAAG,CAAE,CACpByK,IAAI,CAACC,QAAQ,CACXD,IAAI,CAACC,QAAQ,GAAK,GAAG,CAAG1K,QAAQ,CAAG+Q,SAAS,CAAC,CAAC/Q,QAAQ,CAAEyK,IAAI,CAACC,QAAQ,CAAC,CAAC,CAC1E,CAED,MAAO,CAAAuE,UAAU,CAACxE,IAAI,CAAC,CACzB,CAUA;AAEA;;;AAGG,G,QACa,CAAAuG,UAAUA,CAAAC,MAAA,CAEF,KAAAC,cAAA,IAFgB,CACtC/S,G,kBACoB,EAAE,CAAA8S,MAAA,CACtB,GAAI,CAAE3M,MAAM,CAAE,CAAGoK,oBAAoB,CAACJ,cAAc,CAAC6C,UAAU,CAAC,CAChE,GAAI,CAAApP,KAAK,CAAG8M,kBAAkB,CAACN,mBAAmB,CAAC4C,UAAU,CAAC,CAC9D,GAAI,CAAAhM,WAAW,CAAGjC,KAAK,CAAC4G,UAAU,CAACxG,eAAe,CAAC,CACnD,GAAI,CAAAqN,KAAK,CAAGzN,KAAK,CAAC4G,UAAU,CAACyG,mBAAY,CAAC,CAC1C,GAAI,CAAAa,OAAO,EAAAF,cAAA,CAAGP,KAAK,CAACF,OAAO,CAACE,KAAK,CAACF,OAAO,CAACjE,MAAM,CAAG,CAAC,CAAC,eAAvC0E,cAAA,CAAyCP,KAAK,CAACU,EAAE,CAE/D,CAAUlM,WAAW,CAAAxF,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAArB+O,gBAAS,2DAATA,gBAAS,eACT,CAAU+B,KAAK,CAAAhR,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAf+O,gBAAS,wDAATA,gBAAS,eACT,EACEwC,OAAO,EAAI,IAAI,EAAAzR,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBADjB+O,gBAAS,6EAATA,gBAAS,eAKT;AACA,GAAI,CAAC1B,UAAU,CAAEoE,aAAa,CAAC,CAAGpO,KAAK,CAACsB,QAAQ,CAASrG,GAAG,EAAI,EAAE,CAAC,CACnE,GAAI,CAAC+O,UAAU,CAAE,CACfoE,aAAa,CAAC1B,kBAAkB,EAAE,CAAC,CACpC,CAED;AACA1M,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnBnC,MAAM,CAACiN,UAAU,CAACrE,UAAU,CAAC,CAC7B,MAAO,IAAK,CACV;AACA;AACA;AACA5I,MAAM,CAACkN,aAAa,CAACtE,UAAU,CAAC,C,CACjC,CACH,CAAC,CAAE,CAAC5I,MAAM,CAAE4I,UAAU,CAAC,CAAC,CAExB;AACA,GAAI,CAAAuE,IAAI,CAAGvO,KAAK,CAACqC,WAAW,CACzB8E,IAAY,EAAI,CACf,CAAU+G,OAAO,CAAAzR,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAjB+O,gBAAS,OAAU,yCAAyC,EAA5DA,gBAAS,eACTtK,MAAM,CAAC4L,KAAK,CAAChD,UAAU,CAAEkE,OAAO,CAAE/G,IAAI,CAAC,C,CACxC,CACD,CAAC6C,UAAU,CAAEkE,OAAO,CAAE9M,MAAM,CAAC,CAC9B,CAED,GAAI,CAAAoN,UAAU,CAAGnE,SAAS,EAAE,CAC5B,GAAI,CAAAD,MAAM,CAAGpK,KAAK,CAACqC,WAAW,CAC5B,CAAC/H,MAAM,CAAEwD,IAAI,GAAI,CACf0Q,UAAU,CAAClU,MAAM,CAAA2D,QAAA,IACZH,IAAI,EACPoG,QAAQ,CAAE,KAAK,CACf8F,UAAU,EACX,CAAC,CACJ,CAAC,CACD,CAACA,UAAU,CAAEwE,UAAU,CAAC,CACzB,CAED,GAAI,CAAAC,WAAW,CAAGzO,KAAK,CAAC6D,OAAO,CAAC,IAAK,CACnC,GAAI,CAAA4K,WAAW,cAAGzO,KAAK,CAACiG,UAAU,CAChC,CAACiE,KAAK,CAAE9D,GAAG,GAAI,CACb,mBACEpG,KAAC,CAAA7D,aAAA,CAAA0N,IAAI,CAAA5L,QAAA,IAAKiM,KAAK,EAAEhG,QAAQ,CAAE,KAAK,CAAE8F,UAAU,CAAEA,UAAU,CAAE5D,GAAG,CAAEA,GAAG,GAAI,CAE1E,CAAC,CACF,CACD,GAAA3J,OAAA,CAAAC,GAAA,CAAAC,QAAA,GAAa,cACX8R,WAAW,CAACtO,WAAW,CAAG,cAAc,CACzC,CACD,MAAO,CAAAsO,WAAW,CACpB,CAAC,CAAE,CAACzE,UAAU,CAAC,CAAC,CAEhB;AACA,GAAI,CAAAjH,OAAO,CAAGlE,KAAK,CAACiE,QAAQ,CAAC4L,GAAG,CAAC1E,UAAU,CAAC,EAAI2E,YAAY,CAC5D,GAAI,CAAAnP,IAAI,CAAGyC,WAAW,CAACyM,GAAG,CAAC1E,UAAU,CAAC,CACtC,GAAI,CAAA4E,qBAAqB,CAAG5O,KAAK,CAAC6D,OAAO,CACvC,IAAA5F,QAAA,EACE4L,IAAI,CAAE4E,WAAW,CACjBrE,MAAM,CACNmE,IAAI,EACDxL,OAAO,EACVvD,IAAI,EACJ,CACF,CAACiP,WAAW,CAAErE,MAAM,CAAEmE,IAAI,CAAExL,OAAO,CAAEvD,IAAI,CAAC,CAC3C,CAED,MAAO,CAAAoP,qBAAqB,CAC9B,CAEA;;;AAGG,G,QACa,CAAAC,WAAWA,CAAA,EACzB,GAAI,CAAAhQ,KAAK,CAAG8M,kBAAkB,CAACN,mBAAmB,CAACyD,WAAW,CAAC,CAC/D,MAAO,CAAAnU,KAAK,CAACoU,IAAI,CAAClQ,KAAK,CAACiE,QAAQ,CAAC7D,OAAO,EAAE,CAAC,CAAC7D,GAAG,CAAC4T,MAAA,MAAC,CAAC/T,GAAG,CAAE8H,OAAO,CAAC,CAAAiM,MAAA,QAAA/Q,QAAA,IAC1D8E,OAAO,EACV9H,GAAG,IACH,CAAC,CACL,CAEA,KAAM,CAAAgU,8BAA8B,CAAG,+BAA+B,CACtE,GAAI,CAAAC,oBAAoB,CAA2B,EAAE,CAErD;;AAEG,GACH,QAAS,CAAA/D,oBAAoBA,CAAAgE,MAAA,CAMvB,IANwB,CAC5BlE,MAAM,CACNC,U,kBAIE,EAAE,CAAAiE,MAAA,CACJ,GAAI,CAAE/N,MAAM,CAAE,CAAGoK,oBAAoB,CAACJ,cAAc,CAACgE,oBAAoB,CAAC,CAC1E,GAAI,CAAEC,qBAAqB,CAAEhL,kBAAoB,EAAGsH,kBAAkB,CACpEN,mBAAmB,CAAC+D,oBAAoB,CACzC,CACD,GAAI,CAAEtS,QAAQ,CAAE,CAAGkD,KAAK,CAAC4G,UAAU,CAACC,wBAAiB,CAAC,CACtD,GAAI,CAAAlD,QAAQ,CAAGkF,WAAW,EAAE,CAC5B,GAAI,CAAA0E,OAAO,CAAG+B,UAAU,EAAE,CAC1B,GAAI,CAAAnG,UAAU,CAAGoG,aAAa,EAAE,CAEhC;AACAvP,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnBlF,MAAM,CAACF,OAAO,CAACqR,iBAAiB,CAAG,QAAQ,CAC3C,MAAO,IAAK,CACVnR,MAAM,CAACF,OAAO,CAACqR,iBAAiB,CAAG,MAAM,C,CAC1C,C,CACF,CAAE,EAAE,CAAC,CAEN;AACAC,WAAW,CACTzP,KAAK,CAACqC,WAAW,CAAC,IAAK,CACrB,GAAI8G,UAAU,CAACtK,KAAK,GAAK,MAAM,CAAE,CAC/B,GAAI,CAAA5D,GAAG,CAAG,CAACgQ,MAAM,CAAGA,MAAM,CAACtH,QAAQ,CAAE4J,OAAO,CAAC,CAAG,IAAI,GAAK5J,QAAQ,CAAC1I,GAAG,CACrEiU,oBAAoB,CAACjU,GAAG,CAAC,CAAGoD,MAAM,CAACqR,OAAO,CAC3C,CACD,GAAI,CACFC,cAAc,CAACC,OAAO,CACpB1E,UAAU,EAAI+D,8BAA8B,CAC5CY,IAAI,CAACC,SAAS,CAACZ,oBAAoB,CAAC,CACrC,C,CACD,MAAOtP,KAAK,CAAE,CACdnD,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBAAAC,cAAO,CACL,KAAK,qGAC+FgD,KAAK,KAAI,CAC9G,QACF,CACDvB,MAAM,CAACF,OAAO,CAACqR,iBAAiB,CAAG,MAAM,CAC3C,CAAC,CAAE,CAACtE,UAAU,CAAED,MAAM,CAAE9B,UAAU,CAACtK,KAAK,CAAE8E,QAAQ,CAAE4J,OAAO,CAAC,CAAC,CAC9D,CAED;AACA,GAAI,MAAO,CAAArR,QAAQ,GAAK,WAAW,CAAE,CACnC;AACA8D,KAAK,CAACqD,eAAe,CAAC,IAAK,CACzB,GAAI,CACF,GAAI,CAAA0M,gBAAgB,CAAGJ,cAAc,CAACK,OAAO,CAC3C9E,UAAU,EAAI+D,8BAA8B,CAC7C,CACD,GAAIc,gBAAgB,CAAE,CACpBb,oBAAoB,CAAGW,IAAI,CAACI,KAAK,CAACF,gBAAgB,CAAC,CACpD,C,CACD,MAAO3T,CAAC,CAAE,CACV;AAAA,CAEJ,CAAC,CAAE,CAAC8O,UAAU,CAAC,CAAC,CAEhB;AACA;AACAlL,KAAK,CAACqD,eAAe,CAAC,IAAK,CACzB,GAAI,CAAA6M,qBAAqB,CACvBjF,MAAM,EAAInO,QAAQ,GAAK,GAAG,CACtB,CAAC6G,QAAQ,CAAE4J,OAAO,GAChBtC,MAAM;AACJhN,QAAA,IAEK0F,QAAQ,EACX6D,QAAQ,CACNnK,aAAa,CAACsG,QAAQ,CAAC6D,QAAQ,CAAE1K,QAAQ,CAAC,EAC1C6G,QAAQ,CAAC6D,Q,CAEb,EAAA+F,OAAO,CACR,CACHtC,MAAM,CACZ,GAAI,CAAAkF,wBAAwB,CAAG/O,MAAM,EAAN,YAAAA,MAAM,CAAEgP,uBAAuB,CAC5DlB,oBAAoB,CACpB,IAAM7Q,MAAM,CAACqR,OAAO,CACpBQ,qBAAqB,CACtB,CACD,MAAO,IAAMC,wBAAwB,EAAIA,wBAAwB,EAAE,C,CACpE,CAAE,CAAC/O,MAAM,CAAEtE,QAAQ,CAAEmO,MAAM,CAAC,CAAC,CAE9B;AACA;AACAjL,KAAK,CAACqD,eAAe,CAAC,IAAK,CACzB;AACA,GAAIgM,qBAAqB,GAAK,KAAK,CAAE,CACnC,OACD,CAED;AACA,GAAI,MAAO,CAAAA,qBAAqB,GAAK,QAAQ,CAAE,CAC7ChR,MAAM,CAACgS,QAAQ,CAAC,CAAC,CAAEhB,qBAAqB,CAAC,CACzC,OACD,CAED;AACA,GAAI1L,QAAQ,CAACgE,IAAI,CAAE,CACjB,GAAI,CAAA2I,EAAE,CAAGpU,QAAQ,CAACqU,cAAc,CAC9BC,kBAAkB,CAAC7M,QAAQ,CAACgE,IAAI,CAAC6F,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3C,CACD,GAAI8C,EAAE,CAAE,CACNA,EAAE,CAACG,cAAc,EAAE,CACnB,OACD,CACF,CAED;AACA,GAAIpM,kBAAkB,GAAK,IAAI,CAAE,CAC/B,OACD,CAED;AACAhG,MAAM,CAACgS,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,C,CACtB,CAAE,CAAC1M,QAAQ,CAAE0L,qBAAqB,CAAEhL,kBAAkB,CAAC,CAAC,CAC1D,CACH,CAIA;;;;;;;AAOG,GACa,SAAAqM,eAAeA,CAC7BC,QAA2C,CAC3C5D,OAA+B,EAE/B,GAAI,CAAE6D,OAAO,CAAE,CAAG7D,OAAO,EAAI,EAAE,CAC/B/M,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI,CAAAzF,IAAI,CAAG8S,OAAO,EAAI,IAAI,CAAG,CAAEA,OAAS,EAAGjT,SAAS,CACpDU,MAAM,CAACwS,gBAAgB,CAAC,cAAc,CAAEF,QAAQ,CAAE7S,IAAI,CAAC,CACvD,MAAO,IAAK,CACVO,MAAM,CAACyS,mBAAmB,CAAC,cAAc,CAAEH,QAAQ,CAAE7S,IAAI,CAAC,C,CAC3D,CACH,CAAC,CAAE,CAAC6S,QAAQ,CAAEC,OAAO,CAAC,CAAC,CACzB,CAEA;;;;;;;AAOG,GACH,QAAS,CAAAnB,WAAWA,CAClBkB,QAA6C,CAC7C5D,OAA+B,EAE/B,GAAI,CAAE6D,OAAO,CAAE,CAAG7D,OAAO,EAAI,EAAE,CAC/B/M,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI,CAAAzF,IAAI,CAAG8S,OAAO,EAAI,IAAI,CAAG,CAAEA,OAAS,EAAGjT,SAAS,CACpDU,MAAM,CAACwS,gBAAgB,CAAC,UAAU,CAAEF,QAAQ,CAAE7S,IAAI,CAAC,CACnD,MAAO,IAAK,CACVO,MAAM,CAACyS,mBAAmB,CAAC,UAAU,CAAEH,QAAQ,CAAE7S,IAAI,CAAC,C,CACvD,CACH,CAAC,CAAE,CAAC6S,QAAQ,CAAEC,OAAO,CAAC,CAAC,CACzB,CAEA;;;;;;;AAOG,GACH,QAAS,CAAAG,SAASA,CAAAC,MAAA,CAAsD,IAArD,CAAEC,IAAI,CAAEpR,OAA6C,EAAAmR,MAAA,CACtE,GAAI,CAAAE,OAAO,CAAGC,mBAAU,CAACF,IAAI,CAAC,CAE9BjR,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI2N,OAAO,CAACrS,KAAK,GAAK,SAAS,CAAE,CAC/B,GAAI,CAAAuS,OAAO,CAAG/S,MAAM,CAACgT,OAAO,CAACxR,OAAO,CAAC,CACrC,GAAIuR,OAAO,CAAE,CACX;AACA;AACA;AACAE,UAAU,CAACJ,OAAO,CAACE,OAAO,CAAE,CAAC,CAAC,CAC/B,KAAM,CACLF,OAAO,CAACK,KAAK,EAAE,CAChB,CACF,CACH,CAAC,CAAE,CAACL,OAAO,CAAErR,OAAO,CAAC,CAAC,CAEtBG,KAAK,CAACuD,SAAS,CAAC,IAAK,CACnB,GAAI2N,OAAO,CAACrS,KAAK,GAAK,SAAS,EAAI,CAACoS,IAAI,CAAE,CACxCC,OAAO,CAACK,KAAK,EAAE,CAChB,CACH,CAAC,CAAE,CAACL,OAAO,CAAED,IAAI,CAAC,CAAC,CACrB,CAIA;;;;;;;AAOG,GACH,QAAS,CAAAlI,sBAAsBA,CAC7B3E,EAAM,CACNtG,IAAA,CAA6C,IAA7CA,IAAA,WAAAA,IAAA,CAA2C,EAAE,EAE7C,GAAI,CAAA2D,SAAS,CAAGzB,KAAK,CAAC4G,UAAU,CAAC7G,qBAAqB,CAAC,CAEvD,EACE0B,SAAS,EAAI,IAAI,EAAAhF,OAAA,CAAAC,GAAA,CAAAC,QAAA,gBADnB+O,gBAAS,CAEP,sGAAgG,CAC9F,mEAAmE,EAHvEA,gBAAS,eAMT,GAAI,CAAE5O,QAAQ,CAAE,CAAG0O,oBAAoB,CACrCJ,cAAc,CAACrC,sBAAsB,CACtC,CACD,GAAI,CAAAxB,IAAI,CAAGqB,eAAe,CAACxE,EAAE,CAAE,CAAEkC,QAAQ,CAAExI,IAAI,CAACwI,QAAQ,CAAE,CAAC,CAC3D,GAAI,CAAC7E,SAAS,CAACvB,eAAe,CAAE,CAC9B,MAAO,MAAK,CACb,CAED,GAAI,CAAAsR,WAAW,CACbnU,aAAa,CAACoE,SAAS,CAAC0B,eAAe,CAACqE,QAAQ,CAAE1K,QAAQ,CAAC,EAC3D2E,SAAS,CAAC0B,eAAe,CAACqE,QAAQ,CACpC,GAAI,CAAAiK,QAAQ,CACVpU,aAAa,CAACoE,SAAS,CAAC2B,YAAY,CAACoE,QAAQ,CAAE1K,QAAQ,CAAC,EACxD2E,SAAS,CAAC2B,YAAY,CAACoE,QAAQ,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACE,CAAAkK,SAAS,CAACnK,IAAI,CAACC,QAAQ,CAAEiK,QAAQ,CAAC,EAAI,IAAI,EAC1CC,SAAS,CAACnK,IAAI,CAACC,QAAQ,CAAEgK,WAAW,CAAC,EAAI,IAAI,CAEjD,CAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}