{"ast":null,"code":"import Symbol from'./_Symbol.js';import isArguments from'./isArguments.js';import isArray from'./isArray.js';/** Built-in value references. */var spreadableSymbol=Symbol?Symbol.isConcatSpreadable:undefined;/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}export default isFlattenable;","map":{"version":3,"names":["Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","isFlattenable","value"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_isFlattenable.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,WAAW,KAAM,kBAAkB,CAC1C,MAAO,CAAAC,OAAO,KAAM,cAAc,CAElC,iCACA,GAAI,CAAAC,gBAAgB,CAAGH,MAAM,CAAGA,MAAM,CAACI,kBAAkB,CAAGC,SAAS,CAErE;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAC5B,MAAO,CAAAL,OAAO,CAACK,KAAK,CAAC,EAAIN,WAAW,CAACM,KAAK,CAAC,EACzC,CAAC,EAAEJ,gBAAgB,EAAII,KAAK,EAAIA,KAAK,CAACJ,gBAAgB,CAAC,CAAC,CAC5D,CAEA,cAAe,CAAAG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}