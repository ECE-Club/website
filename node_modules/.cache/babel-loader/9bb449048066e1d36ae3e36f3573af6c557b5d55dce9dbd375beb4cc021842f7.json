{"ast":null,"code":"import arrayEach from'./_arrayEach.js';import baseCreate from'./_baseCreate.js';import baseForOwn from'./_baseForOwn.js';import baseIteratee from'./_baseIteratee.js';import getPrototype from'./_getPrototype.js';import isArray from'./isArray.js';import isBuffer from'./isBuffer.js';import isFunction from'./isFunction.js';import isObject from'./isObject.js';import isTypedArray from'./isTypedArray.js';/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=baseIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else{accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}export default transform;","map":{"version":3,"names":["arrayEach","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","transform","object","iteratee","accumulator","isArr","isArrLike","Ctor","constructor","value","index"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/transform.js"],"sourcesContent":["import arrayEach from './_arrayEach.js';\nimport baseCreate from './_baseCreate.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\nimport getPrototype from './_getPrototype.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isTypedArray from './isTypedArray.js';\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nexport default transform;\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,iBAAiB,CACvC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,CAAAC,YAAY,KAAM,oBAAoB,CAC7C,MAAO,CAAAC,YAAY,KAAM,oBAAoB,CAC7C,MAAO,CAAAC,OAAO,KAAM,cAAc,CAClC,MAAO,CAAAC,QAAQ,KAAM,eAAe,CACpC,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CACxC,MAAO,CAAAC,QAAQ,KAAM,eAAe,CACpC,MAAO,CAAAC,YAAY,KAAM,mBAAmB,CAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,SAASA,CAACC,MAAM,CAAEC,QAAQ,CAAEC,WAAW,CAAE,CAChD,GAAI,CAAAC,KAAK,CAAGT,OAAO,CAACM,MAAM,CAAC,CACvBI,SAAS,CAAGD,KAAK,EAAIR,QAAQ,CAACK,MAAM,CAAC,EAAIF,YAAY,CAACE,MAAM,CAAC,CAEjEC,QAAQ,CAAGT,YAAY,CAACS,QAAQ,CAAE,CAAC,CAAC,CACpC,GAAIC,WAAW,EAAI,IAAI,CAAE,CACvB,GAAI,CAAAG,IAAI,CAAGL,MAAM,EAAIA,MAAM,CAACM,WAAW,CACvC,GAAIF,SAAS,CAAE,CACbF,WAAW,CAAGC,KAAK,CAAG,GAAI,CAAAE,IAAI,CAAD,CAAC,CAAG,EAAE,CACrC,CAAC,IACI,IAAIR,QAAQ,CAACG,MAAM,CAAC,CAAE,CACzBE,WAAW,CAAGN,UAAU,CAACS,IAAI,CAAC,CAAGf,UAAU,CAACG,YAAY,CAACO,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CACxE,CAAC,IACI,CACHE,WAAW,CAAG,CAAC,CAAC,CAClB,CACF,CACA,CAACE,SAAS,CAAGf,SAAS,CAAGE,UAAU,EAAES,MAAM,CAAE,SAASO,KAAK,CAAEC,KAAK,CAAER,MAAM,CAAE,CAC1E,MAAO,CAAAC,QAAQ,CAACC,WAAW,CAAEK,KAAK,CAAEC,KAAK,CAAER,MAAM,CAAC,CACpD,CAAC,CAAC,CACF,MAAO,CAAAE,WAAW,CACpB,CAEA,cAAe,CAAAH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}