{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\nexport function useDropdownToggle() {\n  _s();\n  var _ref = useContext(DropdownContext) || {},\n    _ref$show = _ref.show,\n    show = _ref$show === void 0 ? false : _ref$show,\n    _ref$toggle = _ref.toggle,\n    toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n    setToggle = _ref.setToggle;\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\n_s(useDropdownToggle, \"/5x9SiAT4bnv1Vu9J6BdmJuDScA=\");\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  _s2();\n  var children = _ref2.children;\n  var _useDropdownToggle = useDropdownToggle(),\n    props = _useDropdownToggle[0],\n    meta = _useDropdownToggle[1];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n_s2(DropdownToggle, \"n/kdg96o0iNfp84uLuLeUIrVlD4=\", false, function () {\n  return [useDropdownToggle];\n});\n_c = DropdownToggle;\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;\nvar _c;\n$RefreshReg$(_c, \"DropdownToggle\");","map":{"version":3,"names":["PropTypes","React","useContext","useCallback","DropdownContext","noop","useDropdownToggle","_s","_ref","_ref$show","show","_ref$toggle","toggle","setToggle","handleClick","e","ref","onClick","propTypes","children","func","isRequired","DropdownToggle","_ref2","_s2","_useDropdownToggle","props","meta","createElement","Fragment","_c","displayName","$RefreshReg$"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-overlays/esm/DropdownToggle.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AACtD,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAG,CAAC,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAClC,IAAIC,IAAI,GAAGN,UAAU,CAACE,eAAe,CAAC,IAAI,CAAC,CAAC;IACxCK,SAAS,GAAGD,IAAI,CAACE,IAAI;IACrBA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,SAAS;IAC/CE,WAAW,GAAGH,IAAI,CAACI,MAAM;IACzBA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAGN,IAAI,GAAGM,WAAW;IACpDE,SAAS,GAAGL,IAAI,CAACK,SAAS;EAE9B,IAAIC,WAAW,GAAGX,WAAW,CAAC,UAAUY,CAAC,EAAE;IACzCH,MAAM,CAAC,CAACF,IAAI,EAAEK,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,IAAI,EAAEE,MAAM,CAAC,CAAC;EAClB,OAAO,CAAC;IACNI,GAAG,EAAEH,SAAS,IAAIR,IAAI;IACtBY,OAAO,EAAEH,WAAW;IACpB,eAAe,EAAE,IAAI;IACrB,eAAe,EAAE,CAAC,CAACJ;EACrB,CAAC,EAAE;IACDA,IAAI,EAAEA,IAAI;IACVE,MAAM,EAAEA;EACV,CAAC,CAAC;AACJ;AAACL,EAAA,CApBeD,iBAAiB;AAqBjC,IAAIY,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEnB,SAAS,CAACoB,IAAI,CAACC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,GAAA;EAC7B,IAAIL,QAAQ,GAAGI,KAAK,CAACJ,QAAQ;EAE7B,IAAIM,kBAAkB,GAAGnB,iBAAiB,CAAC,CAAC;IACxCoB,KAAK,GAAGD,kBAAkB,CAAC,CAAC,CAAC;IAC7BE,IAAI,GAAGF,kBAAkB,CAAC,CAAC,CAAC;EAEhC,OAAO,aAAaxB,KAAK,CAAC2B,aAAa,CAAC3B,KAAK,CAAC4B,QAAQ,EAAE,IAAI,EAAEV,QAAQ,CAACO,KAAK,EAAEC,IAAI,CAAC,CAAC;AACtF;AAACH,GAAA,CARQF,cAAc;EAAA,QAGIhB,iBAAiB;AAAA;AAAAwB,EAAA,GAHnCR,cAAc;AAUvBA,cAAc,CAACS,WAAW,GAAG,6BAA6B;AAC1DT,cAAc,CAACJ,SAAS,GAAGA,SAAS;AACpC;;AAEA,eAAeI,cAAc;AAAC,IAAAQ,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}