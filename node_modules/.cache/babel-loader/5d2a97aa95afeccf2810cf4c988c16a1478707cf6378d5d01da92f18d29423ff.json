{"ast":null,"code":"import contains from'dom-helpers/contains';import listen from'dom-helpers/listen';import{useCallback,useEffect,useRef}from'react';import useEventCallback from'@restart/hooks/useEventCallback';import warning from'warning';import ownerDocument from'./ownerDocument';var escapeKeyCode=27;var noop=function noop(){};function isLeftClickEvent(event){return event.button===0;}function isModifiedEvent(event){return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey);}var getRefTarget=function getRefTarget(ref){return ref&&('current'in ref?ref.current:ref);};/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */function useRootClose(ref,onRootClose,_temp){var _ref=_temp===void 0?{}:_temp,disabled=_ref.disabled,_ref$clickTrigger=_ref.clickTrigger,clickTrigger=_ref$clickTrigger===void 0?'click':_ref$clickTrigger;var preventMouseRootCloseRef=useRef(false);var onClose=onRootClose||noop;var handleMouseCapture=useCallback(function(e){var _e$composedPath$;var currentTarget=getRefTarget(ref);warning(!!currentTarget,'RootClose captured a close event but does not have a ref to compare it to. '+'useRootClose(), should be passed a ref that resolves to a DOM node');preventMouseRootCloseRef.current=!currentTarget||isModifiedEvent(e)||!isLeftClickEvent(e)||!!contains(currentTarget,(_e$composedPath$=e.composedPath==null?void 0:e.composedPath()[0])!=null?_e$composedPath$:e.target);},[ref]);var handleMouse=useEventCallback(function(e){if(!preventMouseRootCloseRef.current){onClose(e);}});var handleKeyUp=useEventCallback(function(e){if(e.keyCode===escapeKeyCode){onClose(e);}});useEffect(function(){if(disabled||ref==null)return undefined;// Store the current event to avoid triggering handlers immediately\n// https://github.com/facebook/react/issues/20074\nvar currentEvent=window.event;var doc=ownerDocument(getRefTarget(ref));// Use capture for this listener so it fires before React's listener, to\n// avoid false positives in the contains() check below if the target DOM\n// element is removed in the React mouse callback.\nvar removeMouseCaptureListener=listen(doc,clickTrigger,handleMouseCapture,true);var removeMouseListener=listen(doc,clickTrigger,function(e){// skip if this event is the same as the one running when we added the handlers\nif(e===currentEvent){currentEvent=undefined;return;}handleMouse(e);});var removeKeyupListener=listen(doc,'keyup',function(e){// skip if this event is the same as the one running when we added the handlers\nif(e===currentEvent){currentEvent=undefined;return;}handleKeyUp(e);});var mobileSafariHackListeners=[];if('ontouchstart'in doc.documentElement){mobileSafariHackListeners=[].slice.call(doc.body.children).map(function(el){return listen(el,'mousemove',noop);});}return function(){removeMouseCaptureListener();removeMouseListener();removeKeyupListener();mobileSafariHackListeners.forEach(function(remove){return remove();});};},[ref,disabled,clickTrigger,handleMouseCapture,handleMouse,handleKeyUp]);}export default useRootClose;","map":{"version":3,"names":["contains","listen","useCallback","useEffect","useRef","useEventCallback","warning","ownerDocument","escapeKeyCode","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","useRootClose","onRootClose","_temp","_ref","disabled","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","e","_e$composedPath$","currentTarget","composedPath","target","handleMouse","handleKeyUp","keyCode","undefined","currentEvent","window","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-overlays/esm/useRootClose.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var _e$composedPath$;\n\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, (_e$composedPath$ = e.composedPath == null ? void 0 : e.composedPath()[0]) != null ? _e$composedPath$ : e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}