{"ast":null,"code":"import Stack from'./_Stack.js';import equalArrays from'./_equalArrays.js';import equalByTag from'./_equalByTag.js';import equalObjects from'./_equalObjects.js';import getTag from'./_getTag.js';import isArray from'./isArray.js';import isBuffer from'./isBuffer.js';import isTypedArray from'./isTypedArray.js';/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1;/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',objectTag='[object Object]';/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}export default baseIsEqualDeep;","map":{"version":3,"names":["Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","Object","prototype","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","value","othUnwrapped"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_baseIsEqualDeep.js"],"sourcesContent":["import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}