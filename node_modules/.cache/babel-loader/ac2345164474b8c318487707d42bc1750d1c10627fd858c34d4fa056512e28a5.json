{"ast":null,"code":"import arrayPush from'./_arrayPush.js';import isFlattenable from'./_isFlattenable.js';/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).\nbaseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}export default baseFlatten;","map":{"version":3,"names":["arrayPush","isFlattenable","baseFlatten","array","depth","predicate","isStrict","result","index","length","value"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_baseFlatten.js"],"sourcesContent":["import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,iBAAiB,CACvC,MAAO,CAAAC,aAAa,KAAM,qBAAqB,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,CAAE,CAC9D,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CACVC,MAAM,CAAGN,KAAK,CAACM,MAAM,CAEzBJ,SAAS,GAAKA,SAAS,CAAGJ,aAAa,CAAC,CACxCM,MAAM,GAAKA,MAAM,CAAG,EAAE,CAAC,CAEvB,MAAO,EAAEC,KAAK,CAAGC,MAAM,CAAE,CACvB,GAAI,CAAAC,KAAK,CAAGP,KAAK,CAACK,KAAK,CAAC,CACxB,GAAIJ,KAAK,CAAG,CAAC,EAAIC,SAAS,CAACK,KAAK,CAAC,CAAE,CACjC,GAAIN,KAAK,CAAG,CAAC,CAAE,CACb;AACAF,WAAW,CAACQ,KAAK,CAAEN,KAAK,CAAG,CAAC,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,CAAC,CAC5D,CAAC,IAAM,CACLP,SAAS,CAACO,MAAM,CAAEG,KAAK,CAAC,CAC1B,CACF,CAAC,IAAM,IAAI,CAACJ,QAAQ,CAAE,CACpBC,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC,CAAGC,KAAK,CAC/B,CACF,CACA,MAAO,CAAAH,MAAM,CACf,CAEA,cAAe,CAAAL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}