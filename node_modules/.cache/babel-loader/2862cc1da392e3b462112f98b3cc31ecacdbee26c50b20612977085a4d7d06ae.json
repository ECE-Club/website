{"ast":null,"code":"import apply from'./_apply.js';/* Built-in method references for those with the same name as other `lodash` methods. */var nativeMax=Math.max;/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}export default overRest;","map":{"version":3,"names":["apply","nativeMax","Math","max","overRest","func","start","transform","undefined","length","args","arguments","index","array","Array","otherArgs"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_overRest.js"],"sourcesContent":["import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,aAAa,CAE/B,wFACA,GAAI,CAAAC,SAAS,CAAGC,IAAI,CAACC,GAAG,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,QAAQA,CAACC,IAAI,CAAEC,KAAK,CAAEC,SAAS,CAAE,CACxCD,KAAK,CAAGL,SAAS,CAACK,KAAK,GAAKE,SAAS,CAAIH,IAAI,CAACI,MAAM,CAAG,CAAC,CAAIH,KAAK,CAAE,CAAC,CAAC,CACrE,MAAO,WAAW,CAChB,GAAI,CAAAI,IAAI,CAAGC,SAAS,CAChBC,KAAK,CAAG,CAAC,CAAC,CACVH,MAAM,CAAGR,SAAS,CAACS,IAAI,CAACD,MAAM,CAAGH,KAAK,CAAE,CAAC,CAAC,CAC1CO,KAAK,CAAGC,KAAK,CAACL,MAAM,CAAC,CAEzB,MAAO,EAAEG,KAAK,CAAGH,MAAM,CAAE,CACvBI,KAAK,CAACD,KAAK,CAAC,CAAGF,IAAI,CAACJ,KAAK,CAAGM,KAAK,CAAC,CACpC,CACAA,KAAK,CAAG,CAAC,CAAC,CACV,GAAI,CAAAG,SAAS,CAAGD,KAAK,CAACR,KAAK,CAAG,CAAC,CAAC,CAChC,MAAO,EAAEM,KAAK,CAAGN,KAAK,CAAE,CACtBS,SAAS,CAACH,KAAK,CAAC,CAAGF,IAAI,CAACE,KAAK,CAAC,CAChC,CACAG,SAAS,CAACT,KAAK,CAAC,CAAGC,SAAS,CAACM,KAAK,CAAC,CACnC,MAAO,CAAAb,KAAK,CAACK,IAAI,CAAE,IAAI,CAAEU,SAAS,CAAC,CACrC,CAAC,CACH,CAEA,cAAe,CAAAX,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}