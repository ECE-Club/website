{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\nfunction useModalManager(provided) {\n  _s();\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n_s(useModalManager, \"VE12p5i4rGnx2xKBG+CRc6TtTDQ=\");\nvar Modal = /*#__PURE__*/_s2( /*#__PURE__*/forwardRef(_c = _s2(function (_ref, ref) {\n  _s2();\n  var _ref$show = _ref.show,\n    show = _ref$show === void 0 ? false : _ref$show,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'dialog' : _ref$role,\n    className = _ref.className,\n    style = _ref.style,\n    children = _ref.children,\n    _ref$backdrop = _ref.backdrop,\n    backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n    _ref$keyboard = _ref.keyboard,\n    keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n    onBackdropClick = _ref.onBackdropClick,\n    onEscapeKeyDown = _ref.onEscapeKeyDown,\n    transition = _ref.transition,\n    backdropTransition = _ref.backdropTransition,\n    _ref$autoFocus = _ref.autoFocus,\n    autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n    _ref$enforceFocus = _ref.enforceFocus,\n    enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n    _ref$restoreFocus = _ref.restoreFocus,\n    restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n    restoreFocusOptions = _ref.restoreFocusOptions,\n    renderDialog = _ref.renderDialog,\n    _ref$renderBackdrop = _ref.renderBackdrop,\n    renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n      return /*#__PURE__*/React.createElement(\"div\", props);\n    } : _ref$renderBackdrop,\n    providedManager = _ref.manager,\n    containerRef = _ref.container,\n    containerClassName = _ref.containerClassName,\n    onShow = _ref.onShow,\n    _ref$onHide = _ref.onHide,\n    onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n    onExit = _ref.onExit,\n    onExited = _ref.onExited,\n    onExiting = _ref.onExiting,\n    onEnter = _ref.onEnter,\n    onEntering = _ref.onEntering,\n    onEntered = _ref.onEntered,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n  var _useState = useState(!show),\n    exited = _useState[0],\n    setExited = _useState[1];\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    var currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n  var handleHidden = function handleHidden() {\n    setExited(true);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n  var Transition = transition;\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n  var backdropElement = null;\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n}, \"AC5iF8unWHqvh8ulhsxrxC9sE5E=\", false, function () {\n  return [useWaitForDOMRef, useModalManager, useMounted, usePrevious, useEventCallback, useEventCallback, useWillUnmount, useEventCallback, useEventCallback, useEventCallback];\n})), \"AC5iF8unWHqvh8ulhsxrxC9sE5E=\", false, function () {\n  return [useWaitForDOMRef, useModalManager, useMounted, usePrevious, useEventCallback, useEventCallback, useWillUnmount, useEventCallback, useEventCallback, useEventCallback];\n});\n_c2 = Modal;\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default _c3 = Object.assign(Modal, {\n  Manager: ModalManager\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Modal$forwardRef\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","activeElement","contains","canUseDOM","listen","PropTypes","React","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","manager","getManager","useModalManager","provided","_s","modalManager","modal","dialog","backdrop","Object","assign","current","add","container","className","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_s2","_c","_ref","_ref$show","show","_ref$role","role","style","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","createElement","providedManager","containerRef","containerClassName","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","isMounted","prevShow","_useState","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","document","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","target","currentTarget","keyCode","defaultPrevented","handleHidden","_len","arguments","length","args","Array","_key","apply","Transition","dialogProps","undefined","tabIndex","cloneElement","appear","unmountOnExit","backdropElement","BackdropTransition","onClick","Fragment","createPortal","_c2","propTypes","bool","any","func","oneOfType","oneOf","string","elementType","shape","preventScroll","instanceOf","displayName","_c3","Manager","$RefreshReg$"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-overlays/esm/Modal.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}