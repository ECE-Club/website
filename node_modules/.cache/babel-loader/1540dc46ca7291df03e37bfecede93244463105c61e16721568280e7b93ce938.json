{"ast":null,"code":"import Symbol from'./_Symbol.js';import Uint8Array from'./_Uint8Array.js';import eq from'./eq.js';import equalArrays from'./_equalArrays.js';import mapToArray from'./_mapToArray.js';import setToArray from'./_setToArray.js';/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** `Object#toString` result references. */var boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',mapTag='[object Map]',numberTag='[object Number]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]';/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.\n// Invalid dates are coerced to `NaN`.\nreturn eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,\n// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n// for more details.\nreturn object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.\nvar stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).\nstack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}export default equalByTag;","map":{"version":3,"names":["Symbol","Uint8Array","eq","equalArrays","mapToArray","setToArray","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","prototype","undefined","symbolValueOf","valueOf","equalByTag","object","other","tag","bitmask","customizer","equalFunc","stack","byteLength","byteOffset","buffer","name","message","convert","isPartial","size","stacked","get","set","result","call"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/lodash-es/_equalByTag.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}