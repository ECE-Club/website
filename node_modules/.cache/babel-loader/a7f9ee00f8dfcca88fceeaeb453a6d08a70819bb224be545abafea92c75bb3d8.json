{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function componentWillMount(){// Call this.constructor.gDSFP to support sub-classes.\nvar state=this.constructor.getDerivedStateFromProps(this.props,this.state);if(state!==null&&state!==undefined){this.setState(state);}}function componentWillReceiveProps(nextProps){// Call this.constructor.gDSFP to support sub-classes.\n// Use the setState() updater to ensure state isn't stale in certain edge cases.\nfunction updater(prevState){var state=this.constructor.getDerivedStateFromProps(nextProps,prevState);return state!==null&&state!==undefined?state:null;}// Binding \"this\" is important for shallow renderer support.\nthis.setState(updater.bind(this));}function componentWillUpdate(nextProps,nextState){try{var prevProps=this.props;var prevState=this.state;this.props=nextProps;this.state=nextState;this.__reactInternalSnapshotFlag=true;this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(prevProps,prevState);}finally{this.props=prevProps;this.state=prevState;}}// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning=true;componentWillReceiveProps.__suppressDeprecationWarning=true;componentWillUpdate.__suppressDeprecationWarning=true;function polyfill(Component){var prototype=Component.prototype;if(!prototype||!prototype.isReactComponent){throw new Error('Can only polyfill class components');}if(typeof Component.getDerivedStateFromProps!=='function'&&typeof prototype.getSnapshotBeforeUpdate!=='function'){return Component;}// If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n// Error if any of these lifecycles are present,\n// Because they would work differently between older and newer (16.3+) versions of React.\nvar foundWillMountName=null;var foundWillReceivePropsName=null;var foundWillUpdateName=null;if(typeof prototype.componentWillMount==='function'){foundWillMountName='componentWillMount';}else if(typeof prototype.UNSAFE_componentWillMount==='function'){foundWillMountName='UNSAFE_componentWillMount';}if(typeof prototype.componentWillReceiveProps==='function'){foundWillReceivePropsName='componentWillReceiveProps';}else if(typeof prototype.UNSAFE_componentWillReceiveProps==='function'){foundWillReceivePropsName='UNSAFE_componentWillReceiveProps';}if(typeof prototype.componentWillUpdate==='function'){foundWillUpdateName='componentWillUpdate';}else if(typeof prototype.UNSAFE_componentWillUpdate==='function'){foundWillUpdateName='UNSAFE_componentWillUpdate';}if(foundWillMountName!==null||foundWillReceivePropsName!==null||foundWillUpdateName!==null){var componentName=Component.displayName||Component.name;var newApiName=typeof Component.getDerivedStateFromProps==='function'?'getDerivedStateFromProps()':'getSnapshotBeforeUpdate()';throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n'+componentName+' uses '+newApiName+' but also contains the following legacy lifecycles:'+(foundWillMountName!==null?'\\n  '+foundWillMountName:'')+(foundWillReceivePropsName!==null?'\\n  '+foundWillReceivePropsName:'')+(foundWillUpdateName!==null?'\\n  '+foundWillUpdateName:'')+'\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n'+'https://fb.me/react-async-component-lifecycle-hooks');}// React <= 16.2 does not support static getDerivedStateFromProps.\n// As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n// Newer versions of React will ignore these lifecycles if gDSFP exists.\nif(typeof Component.getDerivedStateFromProps==='function'){prototype.componentWillMount=componentWillMount;prototype.componentWillReceiveProps=componentWillReceiveProps;}// React <= 16.2 does not support getSnapshotBeforeUpdate.\n// As a workaround, use cWU to invoke the new lifecycle.\n// Newer versions of React will ignore that lifecycle if gSBU exists.\nif(typeof prototype.getSnapshotBeforeUpdate==='function'){if(typeof prototype.componentDidUpdate!=='function'){throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');}prototype.componentWillUpdate=componentWillUpdate;var componentDidUpdate=prototype.componentDidUpdate;prototype.componentDidUpdate=function componentDidUpdatePolyfill(prevProps,prevState,maybeSnapshot){// 16.3+ will not execute our will-update method;\n// It will pass a snapshot value to did-update though.\n// Older versions will require our polyfilled will-update value.\n// We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n// Because for <= 15.x versions this might be a \"prevContext\" object.\n// We also can't just check \"__reactInternalSnapshot\",\n// Because get-snapshot might return a falsy value.\n// So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\nvar snapshot=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:maybeSnapshot;componentDidUpdate.call(this,prevProps,prevState,snapshot);};}return Component;}export{polyfill};","map":{"version":3,"names":["componentWillMount","state","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","updater","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","__suppressDeprecationWarning","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","componentDidUpdatePolyfill","maybeSnapshot","snapshot","call"],"sources":["/Users/venkataramanasripada/Desktop/ece-skule-ca/src/node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}